/*********************************************************************************************************************
* AI8051U Opensourec Library 即（AI8051U 开源库）是一个基于官方 SDK 接口的第三方开源库
* Copyright (c) 2022 SEEKFREE 逐飞科技
*
* 本文件是STC 开源库的一部分
*
* AI8051U 开源库 是免费软件
* 您可以根据自由软件基金会发布的 GPL（GNU General Public License，即 GNU通用公共许可证）的条款
* 即 GPL 的第3版（即 GPL3.0）或（您选择的）任何后来的版本，重新发布和/或修改它
*
* 本开源库的发布是希望它能发挥作用，但并未对其作任何的保证
* 甚至没有隐含的适销性或适合特定用途的保证
* 更多细节请参见 GPL
*
* 您应该在收到本开源库的同时收到一份 GPL 的副本
* 如果没有，请参阅<https://www.gnu.org/licenses/>
*
* 额外注明：
* 本开源库使用 GPL3.0 开源许可证协议 以上许可申明为译文版本
* 许可申明英文版在 libraries/doc 文件夹下的 GPL3_permission_statement.txt 文件中
* 许可证副本在 libraries 文件夹下 即该文件夹下的 LICENSE 文件
* 欢迎各位使用并传播本程序 但修改内容时必须保留逐飞科技的版权声明（即本声明）
*
* 文件名称          
* 公司名称          成都逐飞科技有限公司
* 版本信息          查看 libraries/doc 文件夹内 version 文件 版本说明
* 开发环境          MDK FOR C251
* 适用平台          AI8051U
* 店铺链接          https://seekfree.taobao.com/
*
* 修改记录
* 日期              作者           备注
* 2024-08-01        大W            first version
********************************************************************************************************************/

#ifndef __ZF_DRIVER_PIT_H
#define __ZF_DRIVER_PIT_H
#include "zf_common_typedef.h"

typedef enum                                                                    // 枚举 TIM通道
{
	TIM0_PIT,
    TIM1_PIT,
    TIM2_PIT,
    TIM3_PIT,
    TIM4_PIT,
    TIM11_PIT,
}pit_index_enum;


#define TIM0_CLEAR_FLAG 	TCON &= ~(1<<5)    		// 定时器0溢出中断标志位。 中断服务程序中，硬件自动清零。
#define TIM1_CLEAR_FLAG 	TCON &= ~(1<<7)    		// 定时器1溢出中断标志位。 中断服务程序中，硬件自动清零。
#define TIM2_CLEAR_FLAG		AUXINTIF &= ~(1<<0) 	// 定时器2溢出中断标志位。 中断服务程序中，硬件自动清零。
#define TIM3_CLEAR_FLAG		AUXINTIF &= ~(1<<1) 	// 定时器3溢出中断标志位。 中断服务程序中，硬件自动清零。
#define TIM4_CLEAR_FLAG		AUXINTIF &= ~(1<<2)		// 定时器4溢出中断标志位。 中断服务程序中，硬件自动清零。
#define TIM11_CLEAR_FLAG	T11CR &= ~(1<<0)		// 定时器11溢出中断标志位。中断服务程序中，硬件自动清零。

//====================================================宏定义函数区====================================================
//-------------------------------------------------------------------------------------------------------------------
// 函数简介     TIM PIT 中断初始化 ms 周期
// 参数说明     pit_n           使用的 PIT 编号
// 参数说明     ms              PIT 周期 ms 级别
// 返回参数     void
// 使用示例     pit_ms_init(TIM0_PIT, 1);
// 备注信息
//-------------------------------------------------------------------------------------------------------------------
#define pit_ms_init(pit_n, ms)  (pit_init((pit_n), (ms) * (system_clock / 1000)))

//-------------------------------------------------------------------------------------------------------------------
// 函数简介     TIM PIT 中断初始化 us 周期
// 参数说明     pit_n           使用的 PIT 编号
// 参数说明     us              PIT 周期 us 级别
// 返回参数     void
// 使用示例     pit_us_init(TIM0_PIT, 100);
// 备注信息
//-------------------------------------------------------------------------------------------------------------------
#define pit_us_init(pit_n, us)  (pit_init((pit_n), (us) * (system_clock / 1000000)))

//====================================================宏定义函数区====================================================

void pit_enable  (pit_index_enum pit_n);
void pit_disable (pit_index_enum pit_n);

void pit_init (pit_index_enum pit_n, uint32 period);

#endif
