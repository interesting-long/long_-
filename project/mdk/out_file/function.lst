C251 COMPILER V5.60.0,  function                                                           03/10/25  20:32:25  PAGE 1   


C251 COMPILER V5.60.0, COMPILATION OF MODULE function
OBJECT MODULE PLACED IN .\out_file\function.obj
COMPILER INVOKED BY: D:\keil\C251\BIN\C251.EXE ..\code\function.c LARGE NOALIAS FLOAT64 WARNINGLEVEL(3) OPTIMIZE(3,SIZE)
                    - BROWSE INCDIR(..\..\libraries\zf_common;..\..\libraries\zf_components;..\..\libraries\zf_device;..\..\libraries\zf_driv
                    -er;..\user;..\code) DEBUG PRINT(.\out_file\function.lst) OBJECT(.\out_file\function.obj) 

stmt  level    source

    1          #include "function.h"
    2          int Set_T=0;
    3          int T3=0;
    4          int PRO_Set_Time=0;
    5          PID servo_pid;
    6          int dajiao=0;
    7          
    8          unsigned char Servo_Flag=0;
    9          
   10          unsigned char ADC_Show_Flag=0;
   11          unsigned char Key_Flag=1;
   12          unsigned char Init_Fg=0;
   13          
   14          /*º¯Êý£º³£¼ûµÄPID¼ÆËã
   15           * ²ÎÊý1£º½á¹¹Ìå±äÁ¿µÄµØÖ·
   16           * ²ÎÊý2£ºµ±Ç°Öµ
   17           * ²ÎÊý3£ºÄ¿±êÖµ
   18           * Àý×Ó£ºNormal_PID(&servo_pid,MID_W-mid,0);//½«servoµÄpid²ÎÊýÉèÖÃÎªÒÔÖÐÏß¼ÓÈ¨ÖµºÍÖÐÏßÖµÖ®²îÉèÖÃÎªÄ¿±êÖµ£
             -º0
   19           */
   20          float Normal_PID(PID *PID,float NowData,float Point)
   21          {
   22   1      
   23   1          PID->LastError=PID->Error;
   24   1          PID->Error = Point - NowData;
   25   1          PID->Out_D=PID->Error- PID->LastError;              //DÏî
   26   1          PID->Out_I+=PID->Error;                             //IÏî
   27   1          PID->Out_P=PID->Error;                              //PÏî
   28   1          return (PID->Kp * PID->Out_P + PID->Ki*PID->Out_I + PID->Kd * PID->Out_D);
   29   1      }
   30          /* º¯Êý£º¹éÒ»»¯º¯Êý
   31           * ²ÎÊý1£ºÎÞ
   32           * ·µ»ØÖµ£ºÎÞ
   33           * Àý×Ó/×÷ÓÃ£º½«¶ÁÈ¡µÄADCÖµÁ¿»¯Îª¾àÀë
   34           */
   35          float unification(void) 
   36          {
   37   1          int16_t left_1  = filtered_adc[0];
   38   1          int16_t left_2  = filtered_adc[1];
   39   1          int16_t right_2 = filtered_adc[2];
   40   1          int16_t right_1 = filtered_adc[3];
   41   1      
   42   1          int32_t he = left_2 + right_2;
   43   1          if (he < 10) return 0.0f;
   44   1          return (fast_sqrt(left_1) - fast_sqrt(right_1)) * (100.0f / he);
   45   1      }
   46          /*¿ìËÙ¿ª·½º¯Êý*/
   47          float fast_sqrt(float number) 
   48          {
   49   1          unsigned long i;
   50   1          float x = number;
   51   1          
   52   1          if (number <= 0.0f) return 0.0f;
   53   1          
   54   1          memcpy(&i, &x, 4);
   55   1          
   56   1          i = 532267893U + (i >> 1);
C251 COMPILER V5.60.0,  function                                                           03/10/25  20:32:25  PAGE 2   

   57   1          
   58   1          memcpy(&x, &i, 4);
   59   1      
   60   1          x = 0.5f * (x + number / x);
   61   1          return x;
   62   1      }
   63          /*µç»ú³õÊ¼»¯*/
   64          void Motor_Init(void)
   65          {
   66   1          pwm_init(Servo_Pwm,50,Servo_Mide);
   67   1          pwm_init(MotorL_pwm2, 17000, 0);
   68   1          pwm_init(MotorL_pwm1, 17000, 0);
   69   1          pwm_init(MotorR_pwm2, 17000, 0);
   70   1          pwm_init(MotorR_pwm1, 17000, 0);
   71   1      }
   72          
   73          
   74          void Servo_Init()
   75          {
   76   1          pwm_init(Servo_Pwm,50,Servo_Mide);
   77   1      }
   78          void CAR_STOP()
   79          {
   80   1              MotorL_SetSpeed(0);
   81   1              MotorR_SetSpeed(0);
   82   1              Ser_Servo_Duty(Servo_Mide);
   83   1      }
   84          
   85          //Í£³µ¼ì²â
   86          void Protect()
   87          {
   88   1              if(CAR_Mode!= STOP)
   89   1              {
   90   2                      if((filtered_adc[0]+filtered_adc[1]+filtered_adc[2]+filtered_adc[3])<10 )
   91   2                      {
   92   3                              CAR_Mode=STOP;
   93   3                              Turn_mode_Init();
   94   3                      }
   95   2              }
   96   1      }
   97          /*×Ô¶¨Òå³õÊ¼»¯º¯Êý¿â*/
   98          void init_all()
   99          {
  100   1              EA=0;
  101   1              system_delay_ms(10);
  102   1              Motor_Init();
  103   1              Servo_Init();
  104   1              PT1H = 0;
  105   1          PT0H = 1;
  106   1              system_delay_ms(5);
  107   1              Buzzer_Init();
  108   1              ADC_GetInit();
  109   1              tft180_init();
  110   1              system_delay_ms(100);
  111   1              tft180_set_color(RGB565_RED,RGB565_WHITE);
  112   1      //      eeprom_read_Num();
  113   1              menu_Init();
  114   1              system_delay_ms(10);
  115   1              
  116   1              pit_ms_init(TIM0_PIT, 20);
  117   1              pit_ms_init(TIM1_PIT, 5);
  118   1              system_delay_ms(5);
  119   1          EA=1;
  120   1      }
  121          
  122          //ÇÐ»»Ä£Ê½µÄ³õÊ¼º¯Êý
C251 COMPILER V5.60.0,  function                                                           03/10/25  20:32:25  PAGE 3   

  123          void Turn_mode_Init(void)
  124          {
  125   1              EA=0;
  126   1              Set_T=0;
  127   1              switch(CAR_Mode)
  128   1              {
  129   2                      case STOP:
  130   2                      {
  131   3                              CAR_STOP();
  132   3                              ADC_Show_Flag=0;
  133   3                              Key_Flag=1;
  134   3                              Servo_Flag=0;
  135   3                              tft180_clear(RGB565_WHITE);
  136   3                              system_delay_ms(5);
  137   3                              tft180_show_string(0,3*16,"Test for STOP");
  138   3                              system_delay_ms(1000);
  139   3                              tft180_clear(RGB565_WHITE);
  140   3                              Refesh_arrow();
  141   3                              menu_display_content();
  142   3                              Show_bujin();
  143   3                              break;
  144   3                      }
  145   2                      case GO:
  146   2                      {
  147   3                              ADC_Show_Flag=0;
  148   3                              Key_Flag=0;
  149   3                              Servo_Flag=1;
  150   3                              tft180_clear(RGB565_WHITE);
  151   3                              system_delay_ms(5);
  152   3                              tft180_show_string(0,3*16,"Test for GO");
  153   3                              system_delay_ms(1000);
  154   3                              tft180_clear(RGB565_WHITE);
  155   3                              
  156   3                              
  157   3                              Motor_Update();
  158   3                              PID_Update();
  159   3                              break;
  160   3                      }
  161   2                      case GO_Pararm1:
  162   2                      {
  163   3                              ADC_Show_Flag=0;
  164   3                              Key_Flag=0;
  165   3                              Servo_Flag=1;
  166   3                              tft180_clear(RGB565_WHITE);
  167   3                              system_delay_ms(5);
  168   3                              tft180_show_string(0,3*16,"Test for GOP1");
  169   3                              system_delay_ms(1000);
  170   3                              tft180_clear(RGB565_WHITE);
  171   3                              
  172   3                              Motor_Update();
  173   3                              PID_Update();
  174   3                              break;
  175   3                      }
  176   2                      case GO_Pararm2:
  177   2                      {
  178   3                              ADC_Show_Flag=0;
  179   3                              Key_Flag=0;
  180   3                              Servo_Flag=1;
  181   3                              tft180_clear(RGB565_WHITE);
  182   3                              system_delay_ms(5);
  183   3                              tft180_show_string(0,3*16,"Test for GOP2");
  184   3                              system_delay_ms(1000);
  185   3                              tft180_clear(RGB565_WHITE);
  186   3                              
  187   3                              Motor_Update();
  188   3                              PID_Update();
C251 COMPILER V5.60.0,  function                                                           03/10/25  20:32:25  PAGE 4   

  189   3                              break;
  190   3                      }
  191   2                      case GO_Pararm3:
  192   2                      {
  193   3                              ADC_Show_Flag=0;
  194   3                              Key_Flag=0;
  195   3                              Servo_Flag=1;
  196   3                              tft180_clear(RGB565_WHITE);
  197   3                              system_delay_ms(5);
  198   3                              tft180_show_string(0,3*16,"Test for GOP3");
  199   3                              system_delay_ms(1000);
  200   3                              tft180_clear(RGB565_WHITE);
  201   3                              
  202   3                              Motor_Update();
  203   3                              PID_Update();
  204   3                              break;
  205   3                      }
  206   2                      case TEST_PWM:
  207   2                      {
  208   3                              Key_Flag=1;
  209   3                              Servo_Flag=0;
  210   3                              tft180_clear(RGB565_WHITE);
  211   3                              system_delay_ms(5);
  212   3                              tft180_show_string(0,3*16,"Test for PWM_TEST");
  213   3                              system_delay_ms(1000);
  214   3                              
  215   3                              break;
  216   3                      }
  217   2                      case TEST_SERVO:
  218   2                      {
  219   3                              Key_Flag=1;
  220   3                              Servo_Flag=0;
  221   3                              tft180_clear(RGB565_WHITE);
  222   3                              system_delay_ms(5);
  223   3                              tft180_show_string(0,3*16,"Test for Servo");
  224   3                              system_delay_ms(1000);
  225   3                              break;
  226   3                      }
  227   2                      case ADC_Show:
  228   2                      {
  229   3                              ADC_Show_Flag=1;
  230   3                              Key_Flag=1;
  231   3                              Servo_Flag=1;
  232   3                              tft180_clear(RGB565_WHITE);
  233   3                              system_delay_ms(5);
  234   3                              tft180_show_string(0,3*16,"Test for ADC_Show");
  235   3                              system_delay_ms(1000);
  236   3                              tft180_clear(RGB565_WHITE);
  237   3                              break;
  238   3                      }
  239   2                      case Seta_Servo:
  240   2                      {
  241   3                              Key_Flag=1;
  242   3                              Servo_Flag=0;
  243   3                              tft180_clear(RGB565_WHITE);
  244   3                              system_delay_ms(5);
  245   3                              tft180_show_string(0,3*16,"Test for Seta_Servo");
  246   3                              system_delay_ms(1000);
  247   3                              tft180_clear(RGB565_WHITE);
  248   3                              break;
  249   3                      }
  250   2              }
  251   1              EA=1;
  252   1      }
  253          
  254          void Show_pararm()
C251 COMPILER V5.60.0,  function                                                           03/10/25  20:32:25  PAGE 5   

  255          {
  256   1              switch(CAR_Mode)
  257   1              {
  258   2                      case STOP:break;
  259   2                      case TEST_PWM:
  260   2                      {
  261   3                              tft180_show_string(0,4*16,"LPW:");  tft180_show_float(5*8,4*16,Test_LPWM,2,2);
  262   3                              tft180_show_string(0,5*16,"RPW:");  tft180_show_float(5*8,5*16,Test_RPWM,2,2);
  263   3                      }break;
  264   2                      case GO:
  265   2                      {
  266   3                              tft180_show_string(0,1*16,"cha:");tft180_show_float(5*8,1*16,dajiao,2,2);
  267   3                              tft180_show_string(0,2*16,"err:");  tft180_show_float(5*8,2*16,unification(),2,2);
  268   3                              tft180_show_string(0,4*16,"KP:");  tft180_show_float(5*8,4*16,KP,2,2);
  269   3                              tft180_show_string(0,5*16,"KD:");  tft180_show_float(5*8,5*16,KD,2,2);
  270   3                              tft180_show_string(0,3*16,"TIME:");  tft180_show_float(5*8,3*16,Set_T,3,0);
  271   3                      }break;
  272   2                      case TEST_SERVO:break;
  273   2                      case GO_Pararm1:
  274   2                      {
  275   3                              tft180_show_string(0,1*16,"cha:");tft180_show_float(5*8,1*16,dajiao,2,2);
  276   3                              tft180_show_string(0,2*16,"err:");  tft180_show_float(5*8,2*16,unification(),2,2);
  277   3                              tft180_show_string(0,4*16,"KP1:");  tft180_show_float(5*8,4*16,KP1,2,2);
  278   3                              tft180_show_string(0,5*16,"KD1:");  tft180_show_float(5*8,5*16,KD1,2,2);
  279   3                              tft180_show_string(0,3*16,"TIME:");  tft180_show_float(5*8,3*16,Set_T,2,0);
  280   3                      }break;
  281   2                      case GO_Pararm2:
  282   2                      {
  283   3                              tft180_show_string(0,1*16,"cha:");tft180_show_float(5*8,1*16,dajiao,2,2);
  284   3                              tft180_show_string(0,2*16,"err:");  tft180_show_float(5*8,2*16,unification(),2,2);
  285   3                              tft180_show_string(0,4*16,"KP2:");  tft180_show_float(5*8,4*16,KP2,2,2);
  286   3                              tft180_show_string(0,5*16,"KD2:");  tft180_show_float(5*8,5*16,KD2,2,2);
  287   3                              tft180_show_string(0,3*16,"TIME:");  tft180_show_float(5*8,3*16,Set_T,2,0);
  288   3                      }break;
  289   2                      case GO_Pararm3:
  290   2                      {
  291   3                              tft180_show_string(0,2*16,"err:");  tft180_show_float(5*8,2*16,unification(),2,2);
  292   3                              tft180_show_string(0,4*16,"KP3:");  tft180_show_float(5*8,4*16,KP3,2,2);
  293   3                              tft180_show_string(0,5*16,"KD3:");  tft180_show_float(5*8,5*16,KD3,2,2);
  294   3                              tft180_show_string(0,3*16,"TIME:");  tft180_show_float(5*8,3*16,Set_T,2,0);
  295   3                      }break;
  296   2                      case ADC_Show:
  297   2                      {
  298   3                              tft180_show_string(0,0*16,"ADC1:");tft180_show_int16(5*8,0*16,ADC_1);
  299   3                              tft180_show_string(0,1*16,"ADC2:");tft180_show_int16(5*8,1*16,ADC_2);
  300   3                              tft180_show_string(0,2*16,"ADC3:");tft180_show_int16(5*8,2*16,ADC_3);
  301   3                              tft180_show_string(0,3*16,"ADC4:");tft180_show_int16(5*8,3*16,ADC_4);
  302   3                      }break;
  303   2                      case Seta_Servo:
  304   2                      {
  305   3                              tft180_show_string(0,0*16,"Value:");tft180_show_int16(5*8,0*16,S_Value);
  306   3                      }break;
  307   2              }
  308   1      
  309   1      }
  310          void SET_Time()
  311          {
  312   1              if(Set_T>Time && CAR_Mode!=STOP)
  313   1              {
  314   2                      CAR_Mode=STOP;
  315   2                      Turn_mode_Init();
  316   2              }
  317   1      }
  318          
  319          void GO_Function(void)
  320          {
C251 COMPILER V5.60.0,  function                                                           03/10/25  20:32:25  PAGE 6   

  321   1              if(Init_Flag==1)
  322   1              {
  323   2                      Turn_mode_Init();
  324   2                      Init_Flag=0;
  325   2              }
  326   1      }


Module Information          Static   Overlayable
------------------------------------------------
  code size            =      3122     ------
  ecode size           =    ------     ------
  data size            =    ------     ------
  idata size           =    ------     ------
  pdata size           =    ------     ------
  xdata size           =        56         18
  xdata-const size     =    ------     ------
  edata size           =    ------     ------
  bit size             =    ------     ------
  ebit size            =    ------     ------
  bitaddressable size  =    ------     ------
  ebitaddressable size =    ------     ------
  far data size        =    ------     ------
  huge data size       =    ------     ------
  const size           =    ------     ------
  hconst size          =       286     ------
End of Module Information.


C251 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
