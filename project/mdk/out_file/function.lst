C251 COMPILER V5.60.0,  function                                                           01/10/25  18:14:56  PAGE 1   


C251 COMPILER V5.60.0, COMPILATION OF MODULE function
OBJECT MODULE PLACED IN .\out_file\function.obj
COMPILER INVOKED BY: D:\keil\C251\BIN\C251.EXE ..\code\function.c LARGE NOALIAS FLOAT64 WARNINGLEVEL(3) OPTIMIZE(3,SIZE)
                    - BROWSE INCDIR(..\..\libraries\zf_common;..\..\libraries\zf_components;..\..\libraries\zf_device;..\..\libraries\zf_driv
                    -er;..\user;..\code) DEBUG PRINT(.\out_file\function.lst) OBJECT(.\out_file\function.obj) 

stmt  level    source

    1          #include "function.h"
    2          int Set_T=0;
    3          int T3=0;
    4          int PRO_Set_Time=0;
    5          PID servo_pid;
    6          float dajiao=0;
    7          
    8          unsigned char Servo_Flag=0;
    9          
   10          unsigned char ADC_Show_Flag=0;
   11          unsigned char Key_Flag=1;
   12          unsigned char Init_Fg=0;
   13          typedef unsigned char           uint8_t         ;
   14          typedef unsigned int            uint16_t        ;
   15          typedef int                                     int16_t         ;
   16          typedef unsigned long int       uint32_t        ;
   17          typedef long int                        int32_t         ;
   18          /*º¯Êý£º³£¼ûµÄPID¼ÆËã
   19           * ²ÎÊý1£º½á¹¹Ìå±äÁ¿µÄµØÖ·
   20           * ²ÎÊý2£ºµ±Ç°Öµ
   21           * ²ÎÊý3£ºÄ¿±êÖµ
   22           * Àý×Ó£ºNormal_PID(&servo_pid,MID_W-mid,0);//½«servoµÄpid²ÎÊýÉèÖÃÎªÒÔÖÐÏß¼ÓÈ¨ÖµºÍÖÐÏßÖµÖ®²îÉèÖÃÎªÄ¿±êÖµ£
             -º0
   23           */
   24          float Normal_PID(PID *PID,float NowData,float Point)
   25          {
   26   1      
   27   1          PID->LastError=PID->Error;
   28   1          PID->Error = Point - NowData;
   29   1          PID->Out_D=PID->Error- PID->LastError;              //DÏî
   30   1          PID->Out_I+=PID->Error;                             //IÏî
   31   1          PID->Out_P=PID->Error;                              //PÏî
   32   1          return (PID->Kp * PID->Out_P + PID->Ki*PID->Out_I + PID->Kd * PID->Out_D);
   33   1      }
   34          /* º¯Êý£º¹éÒ»»¯º¯Êý
   35           * ²ÎÊý1£ºÎÞ
   36           * ·µ»ØÖµ£ºÎÞ
   37           * Àý×Ó/×÷ÓÃ£º½«¶ÁÈ¡µÄADCÖµÁ¿»¯Îª¾àÀë
   38           */
   39          float unification(void) 
   40          {
   41   1              
   42   1          float error_val;
   43   1          int16_t left_1;
   44   1          int16_t left_2;
   45   1          int16_t right_2;
   46   1          int16_t right_1;
   47   1              int32_t cha;
   48   1              int32_t he;
   49   1              
   50   1          left_1  = filtered_adc[0];
   51   1          left_2  = filtered_adc[1];
   52   1          right_2 = filtered_adc[2];
   53   1          right_1 = filtered_adc[3];
   54   1          if(left_2 + right_2<10)
   55   1              {
   56   2                      return 0;
C251 COMPILER V5.60.0,  function                                                           01/10/25  18:14:56  PAGE 2   

   57   2              }
   58   1              else 
   59   1              {
   60   2      
   61   2                      he=left_2 + right_2;
   62   2      //              cha=(left_1 - right_1)*100;
   63   2      //              error_val = (float)cha/ (he*fast_sqrt(he));
   64   2                      error_val = (fast_sqrt(left_1) - fast_sqrt(right_1)) / he;
   65   2                      return error_val*100;
   66   2              }
   67   1      }
*** WARNING C47 IN LINE 47 OF ..\code\function.c: 'cha': unreferenced local variable
   68          /*¿ìËÙ¿ª·½º¯Êý*/
   69          float fast_sqrt(float number) 
   70          {
   71   1          unsigned long i;
   72   1          float x = number;
   73   1          
   74   1          if (number <= 0.0f) return 0.0f;
   75   1          
   76   1          memcpy(&i, &x, 4);
   77   1          
   78   1          i = 532267893U + (i >> 1);
   79   1          
   80   1          memcpy(&x, &i, 4);
   81   1      
   82   1          x = 0.5f * (x + number / x);
   83   1          return x;
   84   1      }
   85          /*µç»ú³õÊ¼»¯*/
   86          void Motor_Init(void)
   87          {
   88   1          pwm_init(Servo_Pwm,50,Servo_Mide);
   89   1          pwm_init(MotorL_pwm2, 17000, 0);
   90   1          pwm_init(MotorL_pwm1, 17000, 0);
   91   1          pwm_init(MotorR_pwm2, 17000, 0);
   92   1          pwm_init(MotorR_pwm1, 17000, 0);
   93   1      }
   94          
   95          
   96          void Servo_Init()
   97          {
   98   1          pwm_init(Servo_Pwm,50,Servo_Mide);
   99   1      }
  100          void CAR_STOP()
  101          {
  102   1              MotorL_SetSpeed(0);
  103   1              MotorR_SetSpeed(0);
  104   1              Ser_Servo_Duty(Servo_Mide);
  105   1      }
  106          
  107          //Í£³µ¼ì²â
  108          void Protect()
  109          {
  110   1              if(CAR_Mode!= STOP)
  111   1              {
  112   2                      if((filtered_adc[0]+filtered_adc[1]+filtered_adc[2]+filtered_adc[3])<10 )
  113   2                      {
  114   3                              CAR_Mode=STOP;
  115   3                              Turn_mode_Init();
  116   3                      }
  117   2              }
  118   1      }
  119          /*×Ô¶¨Òå³õÊ¼»¯º¯Êý¿â*/
  120          void init_all()
  121          {
C251 COMPILER V5.60.0,  function                                                           01/10/25  18:14:56  PAGE 3   

  122   1              EA=0;
  123   1              iap_init();
  124   1              system_delay_ms(10);
  125   1              Motor_Init();
  126   1              Servo_Init();
  127   1              PT1H = 0;
  128   1          PT0H = 1;
  129   1              system_delay_ms(5);
  130   1              
  131   1              ADC_GetInit();
  132   1              tft180_init();
  133   1              system_delay_ms(100);
  134   1              tft180_set_color(RGB565_RED,RGB565_WHITE);
  135   1              eeprom_read_Num();
  136   1              menu_Init();
  137   1              system_delay_ms(10);
  138   1              
  139   1              pit_ms_init(TIM0_PIT, 20);
  140   1              pit_ms_init(TIM1_PIT, 5);
  141   1              system_delay_ms(5);
  142   1          EA=1;
  143   1      }
  144          
  145          //ÇÐ»»Ä£Ê½µÄ³õÊ¼º¯Êý
  146          void Turn_mode_Init(void)
  147          {
  148   1              EA=0;
  149   1              Set_T=0;
  150   1              switch(CAR_Mode)
  151   1              {
  152   2                      case STOP:
  153   2                      {
  154   3                              CAR_STOP();
  155   3                              ADC_Show_Flag=0;
  156   3                              Key_Flag=1;
  157   3                              Servo_Flag=0;
  158   3                              tft180_clear(RGB565_WHITE);
  159   3                              system_delay_ms(5);
  160   3                              tft180_show_string(0,3*16,"Test for STOP");
  161   3                              system_delay_ms(1000);
  162   3                              tft180_clear(RGB565_WHITE);
  163   3                              Refesh_arrow();
  164   3                              menu_display_content();
  165   3                              Show_bujin();
  166   3                              break;
  167   3                      }
  168   2                      case GO:
  169   2                      {
  170   3                              ADC_Show_Flag=0;
  171   3                              Key_Flag=0;
  172   3                              Servo_Flag=1;
  173   3                              tft180_clear(RGB565_WHITE);
  174   3                              system_delay_ms(5);
  175   3                              tft180_show_string(0,3*16,"Test for GO");
  176   3                              system_delay_ms(1000);
  177   3                              tft180_clear(RGB565_WHITE);
  178   3                              
  179   3                              
  180   3                              Motor_Update();
  181   3                              PID_Update();
  182   3                              break;
  183   3                      }
  184   2                      case GO_Pararm1:
  185   2                      {
  186   3                              ADC_Show_Flag=0;
  187   3                              Key_Flag=0;
C251 COMPILER V5.60.0,  function                                                           01/10/25  18:14:56  PAGE 4   

  188   3                              Servo_Flag=1;
  189   3                              tft180_clear(RGB565_WHITE);
  190   3                              system_delay_ms(5);
  191   3                              tft180_show_string(0,3*16,"Test for GOP1");
  192   3                              system_delay_ms(1000);
  193   3                              tft180_clear(RGB565_WHITE);
  194   3                              
  195   3                              Motor_Update();
  196   3                              PID_Update();
  197   3                              break;
  198   3                      }
  199   2                      case GO_Pararm2:
  200   2                      {
  201   3                              ADC_Show_Flag=0;
  202   3                              Key_Flag=0;
  203   3                              Servo_Flag=1;
  204   3                              tft180_clear(RGB565_WHITE);
  205   3                              system_delay_ms(5);
  206   3                              tft180_show_string(0,3*16,"Test for GOP2");
  207   3                              system_delay_ms(1000);
  208   3                              tft180_clear(RGB565_WHITE);
  209   3                              
  210   3                              Motor_Update();
  211   3                              PID_Update();
  212   3                              break;
  213   3                      }
  214   2                      case GO_Pararm3:
  215   2                      {
  216   3                              ADC_Show_Flag=0;
  217   3                              Key_Flag=0;
  218   3                              Servo_Flag=1;
  219   3                              tft180_clear(RGB565_WHITE);
  220   3                              system_delay_ms(5);
  221   3                              tft180_show_string(0,3*16,"Test for GOP3");
  222   3                              system_delay_ms(1000);
  223   3                              tft180_clear(RGB565_WHITE);
  224   3                              
  225   3                              Motor_Update();
  226   3                              PID_Update();
  227   3                              break;
  228   3                      }
  229   2                      case TEST_PWM:
  230   2                      {
  231   3                              Key_Flag=1;
  232   3                              Servo_Flag=0;
  233   3                              tft180_clear(RGB565_WHITE);
  234   3                              system_delay_ms(5);
  235   3                              tft180_show_string(0,3*16,"Test for PWM_TEST");
  236   3                              system_delay_ms(1000);
  237   3                              
  238   3                              break;
  239   3                      }
  240   2                      case TEST_SERVO:
  241   2                      {
  242   3                              Key_Flag=1;
  243   3                              Servo_Flag=0;
  244   3                              tft180_clear(RGB565_WHITE);
  245   3                              system_delay_ms(5);
  246   3                              tft180_show_string(0,3*16,"Test for Servo");
  247   3                              system_delay_ms(1000);
  248   3                              break;
  249   3                      }
  250   2                      case ADC_Show:
  251   2                      {
  252   3                              ADC_Show_Flag=1;
  253   3                              Key_Flag=1;
C251 COMPILER V5.60.0,  function                                                           01/10/25  18:14:56  PAGE 5   

  254   3                              Servo_Flag=1;
  255   3                              tft180_clear(RGB565_WHITE);
  256   3                              system_delay_ms(5);
  257   3                              tft180_show_string(0,3*16,"Test for ADC_Show");
  258   3                              system_delay_ms(1000);
  259   3                              tft180_clear(RGB565_WHITE);
  260   3                              break;
  261   3                      }
  262   2                      case Seta_Servo:
  263   2                      {
  264   3                              Key_Flag=1;
  265   3                              Servo_Flag=0;
  266   3                              tft180_clear(RGB565_WHITE);
  267   3                              system_delay_ms(5);
  268   3                              tft180_show_string(0,3*16,"Test for Seta_Servo");
  269   3                              system_delay_ms(1000);
  270   3                              tft180_clear(RGB565_WHITE);
  271   3                              break;
  272   3                      }
  273   2              }
  274   1              EA=1;
  275   1      }
  276          
  277          void Show_pararm()
  278          {
  279   1              switch(CAR_Mode)
  280   1              {
  281   2                      case STOP:break;
  282   2                      case TEST_PWM:
  283   2                      {
  284   3                              tft180_show_string(0,4*16,"LPW:");  tft180_show_float(5*8,4*16,Test_LPWM,2,2);
  285   3                              tft180_show_string(0,5*16,"RPW:");  tft180_show_float(5*8,5*16,Test_RPWM,2,2);
  286   3                      }break;
  287   2                      case GO:
  288   2                      {
  289   3                              tft180_show_string(0,1*16,"cha:");tft180_show_float(5*8,1*16,dajiao,2,2);
  290   3                              tft180_show_string(0,2*16,"err:");  tft180_show_float(5*8,2*16,uni,2,2);
  291   3                              tft180_show_string(0,4*16,"KP:");  tft180_show_float(5*8,4*16,KP,2,2);
  292   3                              tft180_show_string(0,5*16,"KD:");  tft180_show_float(5*8,5*16,KD,2,2);
  293   3                              tft180_show_string(0,3*16,"TIME:");  tft180_show_float(5*8,3*16,Set_T,3,0);
  294   3                      }break;
  295   2                      case TEST_SERVO:break;
  296   2                      case GO_Pararm1:
  297   2                      {
  298   3                              tft180_show_string(0,1*16,"cha:");tft180_show_float(5*8,1*16,dajiao,2,2);
  299   3                              tft180_show_string(0,2*16,"err:");  tft180_show_float(5*8,2*16,uni,2,2);
  300   3                              tft180_show_string(0,4*16,"KP1:");  tft180_show_float(5*8,4*16,KP1,2,2);
  301   3                              tft180_show_string(0,5*16,"KD1:");  tft180_show_float(5*8,5*16,KD1,2,2);
  302   3                              tft180_show_string(0,3*16,"TIME:");  tft180_show_float(5*8,3*16,Set_T,2,0);
  303   3                      }break;
  304   2                      case GO_Pararm2:
  305   2                      {
  306   3                              tft180_show_string(0,1*16,"cha:");tft180_show_float(5*8,1*16,dajiao,2,2);
  307   3                              tft180_show_string(0,2*16,"err:");  tft180_show_float(5*8,2*16,uni,2,2);
  308   3                              tft180_show_string(0,4*16,"KP2:");  tft180_show_float(5*8,4*16,KP2,2,2);
  309   3                              tft180_show_string(0,5*16,"KD2:");  tft180_show_float(5*8,5*16,KD2,2,2);
  310   3                              tft180_show_string(0,3*16,"TIME:");  tft180_show_float(5*8,3*16,Set_T,2,0);
  311   3                      }break;
  312   2                      case GO_Pararm3:
  313   2                      {
  314   3                              tft180_show_string(0,2*16,"err:");  tft180_show_float(5*8,2*16,uni,2,2);
  315   3                              tft180_show_string(0,4*16,"KP3:");  tft180_show_float(5*8,4*16,KP3,2,2);
  316   3                              tft180_show_string(0,5*16,"KD3:");  tft180_show_float(5*8,5*16,KD3,2,2);
  317   3                              tft180_show_string(0,3*16,"TIME:");  tft180_show_float(5*8,3*16,Set_T,2,0);
  318   3                      }break;
  319   2                      case ADC_Show:
C251 COMPILER V5.60.0,  function                                                           01/10/25  18:14:56  PAGE 6   

  320   2                      {
  321   3                              tft180_show_string(0,0*16,"ADC1:");tft180_show_int16(5*8,0*16,filtered_adc[0]);
  322   3                              tft180_show_string(0,1*16,"ADC2:");tft180_show_int16(5*8,1*16,filtered_adc[1]);
  323   3                              tft180_show_string(0,2*16,"ADC3:");tft180_show_int16(5*8,2*16,filtered_adc[2]);
  324   3                              tft180_show_string(0,3*16,"ADC4:");tft180_show_int16(5*8,3*16,filtered_adc[3]);
  325   3                      }break;
  326   2                      case Seta_Servo:
  327   2                      {
  328   3                              tft180_show_string(0,0*16,"Value:");tft180_show_int16(5*8,0*16,S_Value);
  329   3                      }break;
  330   2              }
  331   1      
  332   1      }
  333          void SET_Time()
  334          {
  335   1              if(Set_T>Time && CAR_Mode!=STOP)
  336   1              {
  337   2                      CAR_Mode=STOP;
  338   2                      Turn_mode_Init();
  339   2              }
  340   1      }
  341          
  342          void GO_Function(void)
  343          {
  344   1              if(Init_Flag==1)
  345   1              {
  346   2                      Turn_mode_Init();
  347   2                      Init_Flag=0;
  348   2              }
  349   1      //      else
  350   1      //      {
  351   1      ////            SET_Time();
  352   1      //              
  353   1      //      }
  354   1      }


Module Information          Static   Overlayable
------------------------------------------------
  code size            =      3139     ------
  ecode size           =    ------     ------
  data size            =    ------     ------
  idata size           =    ------     ------
  pdata size           =    ------     ------
  xdata size           =        58         18
  xdata-const size     =    ------     ------
  edata size           =    ------     ------
  bit size             =    ------     ------
  ebit size            =    ------     ------
  bitaddressable size  =    ------     ------
  ebitaddressable size =    ------     ------
  far data size        =    ------     ------
  huge data size       =    ------     ------
  const size           =    ------     ------
  hconst size          =       288     ------
End of Module Information.


C251 COMPILATION COMPLETE.  1 WARNING(S),  0 ERROR(S)
