C251 COMPILER V5.60.0,  zf_device_tsl1401                                                  01/10/25  13:12:08  PAGE 1   


C251 COMPILER V5.60.0, COMPILATION OF MODULE zf_device_tsl1401
OBJECT MODULE PLACED IN .\out_file\zf_device_tsl1401.obj
COMPILER INVOKED BY: D:\keil\C251\BIN\C251.EXE ..\..\libraries\zf_device\zf_device_tsl1401.c LARGE NOALIAS FLOAT64 WARNI
                    -NGLEVEL(3) OPTIMIZE(3,SIZE) BROWSE INCDIR(..\..\libraries\zf_common;..\..\libraries\zf_components;..\..\libraries\zf_dev
                    -ice;..\..\libraries\zf_driver;..\user;..\code) DEBUG PRINT(.\out_file\zf_device_tsl1401.lst) OBJECT(.\out_file\zf_device
                    -_tsl1401.obj) 

stmt  level    source

    1          /********************************************************************************************************
             -*************
    2          * AI8051U Opensourec Library 即（AI8051U 开源库）是一个基于官方 SDK 接口的第三方开源库
    3          * Copyright (c) 2022 SEEKFREE 逐飞科技
    4          *
    5          * 本文件是STC 开源库的一部分
    6          *
    7          * AI8051U 开源库 是免费软件
    8          * 您可以根据自由软件基金会发布的 GPL（GNU General Public License，即 GNU通用公共许可证）的条款
    9          * 即 GPL 的第3版（即 GPL3.0）或（您选择的）任何后来的版本，重新发布和/或修改它
   10          *
   11          * 本开源库的发布是希望它能发挥作用，但并未对其作任何的保证
   12          * 甚至没有隐含的适销性或适合特定用途的保证
   13          * 更多细节请参见 GPL
   14          *
   15          * 您应该在收到本开源库的同时收到一份 GPL 的副本
   16          * 如果没有，请参阅<https://www.gnu.org/licenses/>
   17          *
   18          * 额外注明：
   19          * 本开源库使用 GPL3.0 开源许可证协议 以上许可申明为译文版本
   20          * 许可申明英文版在 libraries/doc 文件夹下的 GPL3_permission_statement.txt 文件中
   21          * 许可证副本在 libraries 文件夹下 即该文件夹下的 LICENSE 文件
   22          * 欢迎各位使用并传播本程序 但修改内容时必须保留逐飞科技的版权声明（即本声明）
   23          *
   24          * 文件名称          
   25          * 公司名称          成都逐飞科技有限公司
   26          * 版本信息          查看 libraries/doc 文件夹内 version 文件 版本说明
   27          * 开发环境          MDK FOR C251
   28          * 适用平台          AI8051U
   29          * 店铺链接          https://seekfree.taobao.com/
   30          *
   31          * 修改记录
   32          * 日期              作者           备注
   33          * 2024-08-01        大W            first version
   34          *********************************************************************************************************
             -***********/
   35          /********************************************************************************************************
             -*************
   36          * 接线定义：
   37          *                   ------------------------------------
   38          *                   模块管脚            单片机管脚
   39          *                   CLK                 查看 zf_device_tsl1401.h 中 TSL1401_CLK_PIN 宏定义
   40          *                   SI                  查看 zf_device_tsl1401.h 中 TSL1401_SI_PIN 宏定义
   41          *                   AO[x]               查看 zf_device_tsl1401.h 中 TSL1401_AO_PIN_BUFFER 宏定义
   42          *                   VCC                 3.3V电源
   43          *                   GND                 电源地
   44          *                   ------------------------------------
   45          *********************************************************************************************************
             -***********/
   46          
   47          #include "zf_common_clock.h"
   48          #include "zf_common_debug.h"
   49          #include "zf_driver_adc.h"
   50          #include "zf_driver_delay.h"
   51          #include "zf_driver_gpio.h"
   52          #include "zf_driver_pit.h"
C251 COMPILER V5.60.0,  zf_device_tsl1401                                                  01/10/25  13:12:08  PAGE 2   

   53          
   54          #include "zf_device_tsl1401.h"
   55          
   56          uint16 tsl1401_data[2][TSL1401_DATA_LEN];                                       // TSL1401 数据存放数组
   57          
   58          static uint8 tsl1401_init_state = 0;
   59          uint8 tsl1401_finish_flag;                                                      // TSL1401 数据准备就绪标
             -志位
   60          
   61          //-------------------------------------------------------------------------------------------------------
             -------------
   62          // 函数简介     TSL1401 线阵 TSL1401 数据采集
   63          // 参数说明     void
   64          // 返回参数     void
   65          // 使用示例     tsl1401_collect_pit_handler();
   66          // 备注信息     该函数在 isr.c 中对应 TSL1401_PIT_INDEX 的中断服务函数调用
   67          //-------------------------------------------------------------------------------------------------------
             -------------
   68          void tsl1401_collect_pit_handler (void)
   69          {
   70   1              uint8 i = 0;
   71   1              
   72   1          if(!tsl1401_init_state)
   73   1          {
   74   2              return;
   75   2          }
   76   1      
   77   1          TSL1401_CLK(1);
   78   1          TSL1401_SI(0);
   79   1          TSL1401_CLK(0);
   80   1          TSL1401_SI(1);
   81   1          TSL1401_CLK(1);
   82   1          TSL1401_SI(0);
   83   1      
   84   1          for(i = 0; i < TSL1401_DATA_LEN; i ++)
   85   1          {
   86   2              TSL1401_CLK(0);
   87   2              tsl1401_data[0][i] = adc_convert(TSL1401_AO_PIN);
   88   2              tsl1401_data[1][i] = adc_convert(TSL1401_AO_PIN2);
   89   2              TSL1401_CLK(1);
   90   2          }
   91   1          //采集完成标志位置1
   92   1          tsl1401_finish_flag = 1;
   93   1      }
   94          
   95          //-------------------------------------------------------------------------------------------------------
             -------------
   96          // 函数简介     TSL1401 线阵 CCD 图像发送至上位机查看图像
   97          // 参数说明     uart_n          串口号
   98          // 参数说明     index           对应接入的哪个 TSL1401 [0-1]
   99          // 返回参数     void
  100          // 使用示例     tsl1401_send_data(DEBUG_UART_INDEX, 1);
  101          // 备注信息     调用该函数前请先初始化串口
  102          //-------------------------------------------------------------------------------------------------------
             -------------
  103          void tsl1401_send_data (uart_index_enum uart_n, uint8 index)
  104          {
  105   1          uint8 i;
  106   1      
  107   1          uart_write_byte(uart_n, 0x00);
  108   1          uart_write_byte(uart_n, 0xff);
  109   1          uart_write_byte(uart_n, 0x01);
  110   1          uart_write_byte(uart_n, 0x00);
  111   1      
  112   1          for(i=0; i<TSL1401_DATA_LEN; i++)
  113   1          {
C251 COMPILER V5.60.0,  zf_device_tsl1401                                                  01/10/25  13:12:08  PAGE 3   

  114   2              uart_write_byte(uart_n, (uint8)(tsl1401_data[index][i] >> 8));                   // 发送高8位
  115   2              uart_write_byte(uart_n, (uint8)(tsl1401_data[index][i] & 0xFF));                 // 发送高低8位
  116   2          }
  117   1      }
  118          
  119          //-------------------------------------------------------------------------------------------------------
             -------------
  120          // 函数简介     TSL1401 线阵 TSL1401 初始化
  121          // 参数说明     void
  122          // 返回参数     void
  123          // 使用示例     tsl1401_init();
  124          // 备注信息     
  125          //-------------------------------------------------------------------------------------------------------
             -------------
  126          void tsl1401_init (void)     
  127          {
  128   1          tsl1401_init_state = 1;
  129   1          adc_init(TSL1401_AO_PIN, TSL1401_AD_RESOLUTION);
  130   1          adc_init(TSL1401_AO_PIN2, TSL1401_AD_RESOLUTION);
  131   1          gpio_init(TSL1401_CLK_PIN, GPO, GPIO_LOW, GPO_PUSH_PULL);
  132   1          gpio_init(TSL1401_SI_PIN, GPO, GPIO_LOW, GPO_PUSH_PULL);
  133   1      }
  134          


Module Information          Static   Overlayable
------------------------------------------------
  code size            =       333     ------
  ecode size           =    ------     ------
  data size            =    ------     ------
  idata size           =    ------     ------
  pdata size           =    ------     ------
  xdata size           =       514     ------
  xdata-const size     =    ------     ------
  edata size           =    ------     ------
  bit size             =    ------     ------
  ebit size            =    ------     ------
  bitaddressable size  =    ------     ------
  ebitaddressable size =    ------     ------
  far data size        =    ------     ------
  huge data size       =    ------     ------
  const size           =    ------     ------
  hconst size          =         6     ------
End of Module Information.


C251 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
