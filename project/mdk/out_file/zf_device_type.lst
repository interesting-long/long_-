C251 COMPILER V5.60.0,  zf_device_type                                                     27/09/25  22:50:11  PAGE 1   


C251 COMPILER V5.60.0, COMPILATION OF MODULE zf_device_type
OBJECT MODULE PLACED IN .\out_file\zf_device_type.obj
COMPILER INVOKED BY: D:\keil\C251\BIN\C251.EXE ..\..\libraries\zf_device\zf_device_type.c LARGE NOALIAS FLOAT64 WARNINGL
                    -EVEL(3) OPTIMIZE(3,SIZE) BROWSE INCDIR(..\..\libraries\zf_common;..\..\libraries\zf_components;..\..\libraries\zf_device
                    -;..\..\libraries\zf_driver;..\user;..\code) DEBUG PRINT(.\out_file\zf_device_type.lst) OBJECT(.\out_file\zf_device_type.
                    -obj) 

stmt  level    source

    1          /********************************************************************************************************
             -*************
    2          * AI8051U Opensourec Library 即（AI8051U 开源库）是一个基于官方 SDK 接口的第三方开源库
    3          * Copyright (c) 2022 SEEKFREE 逐飞科技
    4          *
    5          * 本文件是STC 开源库的一部分
    6          *
    7          * AI8051U 开源库 是免费软件
    8          * 您可以根据自由软件基金会发布的 GPL（GNU General Public License，即 GNU通用公共许可证）的条款
    9          * 即 GPL 的第3版（即 GPL3.0）或（您选择的）任何后来的版本，重新发布和/或修改它
   10          *
   11          * 本开源库的发布是希望它能发挥作用，但并未对其作任何的保证
   12          * 甚至没有隐含的适销性或适合特定用途的保证
   13          * 更多细节请参见 GPL
   14          *
   15          * 您应该在收到本开源库的同时收到一份 GPL 的副本
   16          * 如果没有，请参阅<https://www.gnu.org/licenses/>
   17          *
   18          * 额外注明：
   19          * 本开源库使用 GPL3.0 开源许可证协议 以上许可申明为译文版本
   20          * 许可申明英文版在 libraries/doc 文件夹下的 GPL3_permission_statement.txt 文件中
   21          * 许可证副本在 libraries 文件夹下 即该文件夹下的 LICENSE 文件
   22          * 欢迎各位使用并传播本程序 但修改内容时必须保留逐飞科技的版权声明（即本声明）
   23          *
   24          * 文件名称          
   25          * 公司名称          成都逐飞科技有限公司
   26          * 版本信息          查看 libraries/doc 文件夹内 version 文件 版本说明
   27          * 开发环境          MDK FOR C251
   28          * 适用平台          AI8051U
   29          * 店铺链接          https://seekfree.taobao.com/
   30          *
   31          * 修改记录
   32          * 日期              作者           备注
   33          * 2024-08-01        大W            first version
   34          *********************************************************************************************************
             -***********/
   35          
   36          #include "zf_device_type.h"
   37          
   38          wireless_type_enum  wireless_type       = NO_WIRELESS;
   39          tof_type_enum       tof_type            = NO_TOF;
   40          gps_type_enum       gps_type            = NO_GPS;
   41          
   42          void (*tof_module_exti_handler)(uint8 dat) = NULL;                      // ToF 模块 INT 更新中断
   43          
   44          //-------------------------------------------------------------------------------------------------------
             -------------
   45          // 函数简介     设置无线模块类型
   46          // 参数说明     type_set        选定的无线模块类型
   47          // 参数说明     uart_callback   设备的串口回调函数
   48          // 返回参数     void
   49          // 使用示例     set_wireless_type(WIRELESS_UART, uart_callback);
   50          // 备注信息     一般由各摄像头初始化内部调用
   51          //-------------------------------------------------------------------------------------------------------
             -------------
   52          void set_wireless_type (wireless_type_enum type_set, uart_index_enum uartx, void *uart_callback)
C251 COMPILER V5.60.0,  zf_device_type                                                     27/09/25  22:50:11  PAGE 2   

   53          {
   54   1          wireless_type = type_set;
   55   1          
   56   1          if(uartx == UART_1)
   57   1          {
   58   2              uart1_irq_handler = uart_callback;
   59   2          }
   60   1          else if(uartx == UART_2)
   61   1          {
   62   2              uart2_irq_handler = uart_callback;
   63   2          }
   64   1          else if(uartx == UART_3)
   65   1          {
   66   2              uart3_irq_handler = uart_callback;
   67   2          }
   68   1          else if(uartx == UART_4)
   69   1          {
   70   2              uart4_irq_handler = uart_callback;
   71   2          }
   72   1      }
   73          
   74          //-------------------------------------------------------------------------------------------------------
             -------------
   75          // 函数简介     设置 ToF 模块类型
   76          // 参数说明     type_set        选定的 ToF 模块类型
   77          // 参数说明     exti_callback   设备的外部中断回调函数
   78          // 返回参数     void
   79          // 使用示例     set_tof_type(TOF_DL1A, dl1a_int_handler);
   80          // 备注信息     一般由各摄像头初始化内部调用
   81          //-------------------------------------------------------------------------------------------------------
             -------------
   82          void set_tof_type (tof_type_enum type_set, void *exti_callback)
   83          {
   84   1          tof_type = type_set;
   85   1          tof_module_exti_handler = exti_callback;
   86   1      }
   87          
   88          
   89          //-------------------------------------------------------------------------------------------------------
             -------------
   90          // 函数简介     设置 ToF 模块类型
   91          // 参数说明     type_set        选定的 ToF 模块类型
   92          // 参数说明     exti_callback   设备的外部中断回调函数
   93          // 返回参数     void
   94          // 使用示例     set_tof_type(TOF_DL1A, dl1a_int_handler);
   95          // 备注信息     一般由各摄像头初始化内部调用
   96          //-------------------------------------------------------------------------------------------------------
             -------------
   97          void set_gps_type (gps_type_enum type_set, uart_index_enum uartx, void *uart_callback)
   98          {
   99   1          gps_type = type_set;
  100   1          if(uartx == UART_1)
  101   1          {
  102   2              uart1_irq_handler = uart_callback;
  103   2          }
  104   1          else if(uartx == UART_2)
  105   1          {
  106   2              uart2_irq_handler = uart_callback;
  107   2          }
  108   1          else if(uartx == UART_3)
  109   1          {
  110   2              uart3_irq_handler = uart_callback;
  111   2          }
  112   1          else if(uartx == UART_4)
  113   1          {
  114   2              uart4_irq_handler = uart_callback;
C251 COMPILER V5.60.0,  zf_device_type                                                     27/09/25  22:50:11  PAGE 3   

  115   2          }
  116   1      }
  117          


Module Information          Static   Overlayable
------------------------------------------------
  code size            =       149     ------
  ecode size           =    ------     ------
  data size            =    ------     ------
  idata size           =    ------     ------
  pdata size           =    ------     ------
  xdata size           =         8     ------
  xdata-const size     =    ------     ------
  edata size           =    ------     ------
  bit size             =    ------     ------
  ebit size            =    ------     ------
  bitaddressable size  =    ------     ------
  ebitaddressable size =    ------     ------
  far data size        =    ------     ------
  huge data size       =    ------     ------
  const size           =    ------     ------
  hconst size          =        28     ------
End of Module Information.


C251 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
