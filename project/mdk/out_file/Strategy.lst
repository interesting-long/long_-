C251 COMPILER V5.60.0,  Strategy                                                           12/10/25  14:42:33  PAGE 1   


C251 COMPILER V5.60.0, COMPILATION OF MODULE Strategy
OBJECT MODULE PLACED IN .\out_file\Strategy.obj
COMPILER INVOKED BY: D:\keil\C251\BIN\C251.EXE ..\code\Strategy.c LARGE NOALIAS FLOAT64 WARNINGLEVEL(3) OPTIMIZE(3,SIZE)
                    - BROWSE INCDIR(..\..\libraries\zf_common;..\..\libraries\zf_components;..\..\libraries\zf_device;..\..\libraries\zf_driv
                    -er;..\user;..\code) DEBUG PRINT(.\out_file\Strategy.lst) OBJECT(.\out_file\Strategy.obj) 

stmt  level    source

    1          #include "Strategy.h"
    2          unsigned int if_time=0;
    3          unsigned int if2_time=0;
    4          unsigned int Continue_Time=0;
    5          unsigned char Enter_Flag_Left=0;
    6          unsigned char Cycle_Stat=EXIT;
    7          
    8          unsigned char Road_Stat=Normal_Str;
    9          unsigned int Short_Time=0;
   10          unsigned int Long_Time=0;
   11          unsigned int Bend_Time=0;
   12          
   13          unsigned int Entern_Flag_Time=0;
   14          unsigned int Entern_Delay_Time=0;
   15          unsigned int Entern_Continue_Time=0;
   16          int turn_Value=0;
   17          int Mode_Flag=0;
   18          
   19          unsigned int Not_Time=0;
   20          //环岛判断
   21          void if_Cycle(void)
   22          {
   23   1              switch(Cycle_Stat)
   24   1              {
   25   2                      case EXIT:
   26   2                      {
   27   3                              
   28   3                              if(ADC_2==1023 || ADC_3==1023 )
   29   3                              {
   30   4                                      if_time++;
   31   4                                      if(if_time>Entern_Flag_Time)
   32   4                                      {
   33   5                                              Cycle_Stat=APPROACH;
   34   5                                              if_time=0;
   35   5                                      }
   36   4                              }
   37   3                              else
   38   3                              {
   39   4                                      if_time=0;
   40   4                              }
   41   3                              break;
   42   3                      }
   43   2                      case APPROACH:
   44   2                      {
   45   3                                      if2_time++;
   46   3                                      if(if2_time>Entern_Delay_Time)
   47   3                                      {
   48   4                                              Cycle_Stat=Left_ENTER;
   49   4                                              if2_time=0;
   50   4                                      }
   51   3                              break;
   52   3                      }
   53   2                      case Left_ENTER:
   54   2                      {
   55   3                              Enter_Flag_Left=1;
   56   3                              Buzzer_ON();
   57   3                              Continue_Time++;
C251 COMPILER V5.60.0,  Strategy                                                           12/10/25  14:42:33  PAGE 2   

   58   3                              if(Continue_Time>Entern_Continue_Time)
   59   3                              {
   60   4                                      Cycle_Stat=EXIT;
   61   4                                      Continue_Time = 0;  //
   62   4                      Enter_Flag_Left = 0;     //
   63   4                                      Buzzer_OFF();
   64   4                              }
   65   3                              break;
   66   3                      }
   67   2                      default :
   68   2                      {
   69   3                              CAR_STOP();
   70   3                              break;
   71   3                      }
   72   2              }
   73   1      
   74   1      }
   75          //切弯补丁
   76          int Help_turn()
   77          {
   78   1              int left  = ADC_1 + ADC_2;
   79   1              int right = ADC_3 + ADC_4;
   80   1              if (left < 200 && right < 200)
   81   1              {
   82   2                      // 同时满足，取较小一侧优先
   83   2                      if (left < right)
   84   2                              return -50;   // 左
   85   2                      else
   86   2                              return 50;    // 右
   87   2              }
   88   1              else if (left < 200)
   89   1              {
   90   2                      return -50;   // 左
   91   2              }
   92   1              else if (right < 200)
   93   1              {
   94   2                      return 50;    // 右
   95   2              }
   96   1              else
   97   1              {
   98   2                      return 0;     // 不转
   99   2              }
  100   1      }
  101          int Help_turn2(int temp,int value,int ADC_Flag)
  102          {
  103   1              int left  = ADC_1 + ADC_2;
  104   1              int right = ADC_3 + ADC_4;
  105   1              if (left < ADC_Flag && right < ADC_Flag)
  106   1              {
  107   2                      // 同时满足，取较小一侧优先
  108   2                      if (left < right)
  109   2                              return Servo_Mide-value;   // 左
  110   2                      else
  111   2                              return Servo_Mide+value;    // 右
  112   2              }
  113   1              else if (left < ADC_Flag)
  114   1              {
  115   2                      return Servo_Mide-value;   // 左
  116   2              }
  117   1              else if (right < ADC_Flag)
  118   1              {
  119   2                      return Servo_Mide+value;    // 右
  120   2              }
  121   1              else
  122   1              {
  123   2                      return temp;     
C251 COMPILER V5.60.0,  Strategy                                                           12/10/25  14:42:33  PAGE 3   

  124   2              }
  125   1      }
  126          void State_of_road(void)
  127          {
  128   1              switch(Road_Stat)
  129   1              {
  130   2                      case Normal_Str:
  131   2                      {
  132   3                              Motor_Update(0);
  133   3                              if(dajiao<Stright_Flag_Value && dajiao>-Stright_Flag_Value)
  134   3                              {
  135   4                                      Short_Time++;
  136   4                                      Bend_Time=0;
  137   4                                      if(Short_Time>Short_Judge_Time)
  138   4                                      {
  139   5      //                                      Buzzer_OFF();
  140   5                                              Short_Time=0;
  141   5                                              Road_Stat=Short_Str;
  142   5                                      }
  143   4                              }
  144   3                              else
  145   3                  {
  146   4                                      Bend_Time++;
  147   4                                      Short_Time=0; // 重要：条件不满足时重置计时
  148   4                                      if(Bend_Time>10)
  149   4                                      {
  150   5      //                                      Buzzer_ON();
  151   5                                              Bend_Time=0;
  152   5                                              Road_Stat=Bend;
  153   5                                      }
  154   4                      
  155   4                  }
  156   3                              break;
  157   3                      }
  158   2                      case Short_Str:
  159   2                      {
  160   3                              Motor_Update(Short_add);
  161   3                              if(dajiao<Stright_Flag_Value && dajiao>-Stright_Flag_Value)
  162   3                              {
  163   4                                      Long_Time++;
  164   4                                      Not_Time=0;
  165   4                                      if(Long_Time>Long_Judge_Time)
  166   4                                      {
  167   5      //                                      Buzzer_OFF();
  168   5                                              Long_Time=0;
  169   5                                              Road_Stat=Long_Str;
  170   5                                      }
  171   4                              }
  172   3                              else
  173   3                              {
  174   4                                      Long_Time=0;
  175   4                                      Not_Time++;
  176   4                                      {
  177   5                                              if(Not_Time>No_Tim)
  178   5                                              {
  179   6                                                      Not_Time=0;
  180   6                                                      Road_Stat=Normal_Str;
  181   6                                              }
  182   5                                      }
  183   4                              }
  184   3                              break;
  185   3                      }
  186   2                      case Long_Str:
  187   2                      {
  188   3                              Motor_Update(Long_add);
  189   3                              if(dajiao>Bend_Flag_Value || dajiao<-Bend_Flag_Value)
C251 COMPILER V5.60.0,  Strategy                                                           12/10/25  14:42:33  PAGE 4   

  190   3                              {
  191   4                                      Bend_Time++;
  192   4                                      if(Bend_Time>5)
  193   4                                      {
  194   5      //                                      Buzzer_ON();
  195   5                                              Bend_Time=0;
  196   5                                              Road_Stat=Bend;
  197   5                                      }
  198   4                              
  199   4                              }
  200   3                              else
  201   3                              {
  202   4                                      Bend_Time=0;
  203   4                              }
  204   3                              break;
  205   3                      }
  206   2                      case Bend:
  207   2                      {
  208   3                              Motor_Update(Bend_slow);
  209   3                              if(dajiao>Bend_Flag_Value)
  210   3                              {
  211   4                                      Not_Time=0;
  212   4                              }
  213   3                              else if( dajiao<-Bend_Flag_Value)
  214   3                              {
  215   4                                      Not_Time=0;
  216   4                              }
  217   3                              else
  218   3                              {
  219   4                                      Not_Time++;
  220   4                                      if(Not_Time>No_Tim)
  221   4                                      {
  222   5      //                                      Buzzer_OFF();
  223   5                                              Not_Time=0;
  224   5                                              Road_Stat=Normal_Str;
  225   5                                      }
  226   4      //                                      tft180_show_string(0,0*16,"Normal");
  227   4                              }
  228   3                              break;
  229   3                      }
  230   2                      default :
  231   2                      {
  232   3      //                      Buzzer_OFF();
  233   3                              CAR_STOP();
  234   3                              break;
  235   3                      }
  236   2              
  237   2              }       
  238   1      
  239   1      }


Module Information          Static   Overlayable
------------------------------------------------
  code size            =      1063     ------
  ecode size           =    ------     ------
  data size            =    ------     ------
  idata size           =    ------     ------
  pdata size           =    ------     ------
  xdata size           =        27     ------
  xdata-const size     =    ------     ------
  edata size           =    ------     ------
  bit size             =    ------     ------
  ebit size            =    ------     ------
  bitaddressable size  =    ------     ------
  ebitaddressable size =    ------     ------
  far data size        =    ------     ------
C251 COMPILER V5.60.0,  Strategy                                                           12/10/25  14:42:33  PAGE 5   

  huge data size       =    ------     ------
  const size           =    ------     ------
  hconst size          =       102     ------
End of Module Information.


C251 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
