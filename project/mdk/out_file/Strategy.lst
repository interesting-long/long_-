C251 COMPILER V5.60.0,  Strategy                                                           14/10/25  22:38:45  PAGE 1   


C251 COMPILER V5.60.0, COMPILATION OF MODULE Strategy
OBJECT MODULE PLACED IN .\out_file\Strategy.obj
COMPILER INVOKED BY: D:\keil\C251\BIN\C251.EXE ..\code\Strategy.c LARGE NOALIAS FLOAT64 WARNINGLEVEL(3) OPTIMIZE(3,SIZE)
                    - BROWSE INCDIR(..\..\libraries\zf_common;..\..\libraries\zf_components;..\..\libraries\zf_device;..\..\libraries\zf_driv
                    -er;..\user;..\code) DEBUG PRINT(.\out_file\Strategy.lst) OBJECT(.\out_file\Strategy.obj) 

stmt  level    source

    1          #include "Strategy.h"
    2          unsigned int if_time=0;
    3          unsigned int if2_time=0;
    4          unsigned int Continue_Time=0;
    5          unsigned char Enter_Flag_Left=0;
    6          unsigned char Cycle_Stat=EXIT;
    7          
    8          unsigned char Road_Stat=Short_Str;
    9          
   10          unsigned int Short_Time=0;
   11          unsigned int Long_Time=0;
   12          unsigned int Bend_Time=0;
   13          unsigned int SLOW_Time=0;
   14          unsigned int Accel_Time=0;
   15          
   16          unsigned int Entern_Flag_Time=0;
   17          unsigned int Entern_Delay_Time=0;
   18          unsigned int Entern_Continue_Time=0;
   19          int turn_Value=0;
   20          int Mode_Flag=0;
   21          
   22          
   23          //环岛判断
   24          void if_Cycle(void)
   25          {
   26   1              switch(Cycle_Stat)
   27   1              {
   28   2                      case EXIT:
   29   2                      {
   30   3                              
   31   3                              if(ADC_2==1023 || ADC_3==1023 )
   32   3                              {
   33   4                                      if_time++;
   34   4                                      if(if_time>Entern_Flag_Time)
   35   4                                      {
   36   5                                              Cycle_Stat=APPROACH;
   37   5                                              if_time=0;
   38   5                                      }
   39   4                              }
   40   3                              else
   41   3                              {
   42   4                                      if_time=0;
   43   4                              }
   44   3                              break;
   45   3                      }
   46   2                      case APPROACH:
   47   2                      {
   48   3                                      if2_time++;
   49   3                                      if(if2_time>Entern_Delay_Time)
   50   3                                      {
   51   4                                              Cycle_Stat=Left_ENTER;
   52   4                                              if2_time=0;
   53   4                                      }
   54   3                              break;
   55   3                      }
   56   2                      case Left_ENTER:
   57   2                      {
C251 COMPILER V5.60.0,  Strategy                                                           14/10/25  22:38:45  PAGE 2   

   58   3                              Enter_Flag_Left=1;
   59   3                              Buzzer_ON();
   60   3                              Continue_Time++;
   61   3                              if(Continue_Time>Entern_Continue_Time)
   62   3                              {
   63   4                                      Cycle_Stat=EXIT;
   64   4                                      Continue_Time = 0;  //
   65   4                      Enter_Flag_Left = 0;     //
   66   4                                      Buzzer_OFF();
   67   4                              }
   68   3                              break;
   69   3                      }
   70   2                      default :
   71   2                      {
   72   3                              CAR_STOP();
   73   3                              break;
   74   3                      }
   75   2              }
   76   1      
   77   1      }
   78          //切弯补丁
   79          int Help_turn()
   80          {
   81   1              int left  = ADC_1 + ADC_2;
   82   1              int right = ADC_3 + ADC_4;
   83   1              if (left < 200 && right < 200)
   84   1              {
   85   2                      // 同时满足，取较小一侧优先
   86   2                      if (left < right)
   87   2                              return -50;   // 左
   88   2                      else
   89   2                              return 50;    // 右
   90   2              }
   91   1              else if (left < 200)
   92   1              {
   93   2                      return -50;   // 左
   94   2              }
   95   1              else if (right < 200)
   96   1              {
   97   2                      return 50;    // 右
   98   2              }
   99   1              else
  100   1              {
  101   2                      return 0;     // 不转
  102   2              }
  103   1      }
  104          int Help_turn2(int temp,int value,int ADC_Flag)
  105          {
  106   1              int left  = ADC_1 + ADC_2;
  107   1              int right = ADC_3 + ADC_4;
  108   1              if (left < ADC_Flag && right < ADC_Flag)
  109   1              {
  110   2                      // 同时满足，取较小一侧优先
  111   2                      if (left < right)
  112   2                              return Servo_Mide-value;   // 左
  113   2                      else
  114   2                              return Servo_Mide+value;    // 右
  115   2              }
  116   1              else if (left < ADC_Flag)
  117   1              {
  118   2                      return Servo_Mide-value;   // 左
  119   2              }
  120   1              else if (right < ADC_Flag)
  121   1              {
  122   2                      return Servo_Mide+value;    // 右
  123   2              }
C251 COMPILER V5.60.0,  Strategy                                                           14/10/25  22:38:45  PAGE 3   

  124   1              else
  125   1              {
  126   2                      return temp;     
  127   2              }
  128   1      }
  129          int Help_turn_Two(int temp, int value, int value2, int ADC_Flag, int ADC_Flag2)
  130          {
  131   1          int left  = ADC_1 + ADC_2;
  132   1          int right = ADC_3 + ADC_4;
  133   1      
  134   1          // -------- 第一组阈值判断 --------
  135   1          if (left < ADC_Flag && right < ADC_Flag)
  136   1          {
  137   2              return (left < right) ? (Servo_Mide - value) : (Servo_Mide + value);
  138   2          }
  139   1          else if (left < ADC_Flag)
  140   1          {
  141   2              return Servo_Mide - value;
  142   2          }
  143   1          else if (right < ADC_Flag)
  144   1          {
  145   2              return Servo_Mide + value;
  146   2          }
  147   1      
  148   1          // -------- 第二组阈值判断 --------
  149   1          if (left < ADC_Flag2 && right < ADC_Flag2)
  150   1          {
  151   2              return (left < right) ? (Servo_Mide - value2) : (Servo_Mide + value2);
  152   2          }
  153   1          else if (left < ADC_Flag2)
  154   1          {
  155   2              return Servo_Mide - value2;
  156   2          }
  157   1          else if (right < ADC_Flag2)
  158   1          {
  159   2              return Servo_Mide + value2;
  160   2          }
  161   1      
  162   1          // -------- 都不满足，返回原值 --------
  163   1          return temp;
  164   1      }
  165          
  166          int State_of_road(void)
  167          {
  168   1              switch(Road_Stat)
  169   1              {
  170   2                      case Short_Str:
  171   2                      {
  172   3                              Motor_Update(Short_add);
  173   3                              if(abs(dajiao)<Stright_Flag_Value)
  174   3                              {
  175   4                                      Long_Time++;
  176   4                                      Bend_Time=0;
  177   4                                      if(Long_Time>Long_Judge_Time)
  178   4                                      {
  179   5                                              Long_Time=0;
  180   5                                              Road_Stat=Long_Str;
  181   5                                      }
  182   4                              }
  183   3                              else
  184   3                              {
  185   4                                      Long_Time=0;
  186   4                                      Bend_Time++;
  187   4                                      {
  188   5                                              if(Bend_Time>Bend_Judge_Time)
  189   5                                              {
C251 COMPILER V5.60.0,  Strategy                                                           14/10/25  22:38:45  PAGE 4   

  190   6                                                      Bend_Time=0;
  191   6                                                      Road_Stat=Short_Bend;
  192   6                                              }
  193   5                                      }
  194   4                              }
  195   3                              return Short_add;
  196   3                              break;
  197   3                      }
  198   2                      case Long_Str:
  199   2                      {
  200   3                              Motor_Update(Long_add);
  201   3                              Accel_Time++;
  202   3                              if(abs(dajiao)>Bend_Flag_Value)
  203   3                              {
  204   4                                      Bend_Time++;
  205   4                                      if(Bend_Time>Bend_Judge_Time)
  206   4                                      {
  207   5                                              if(Accel_Time>300)//加速时间1.5s
  208   5                                              {
  209   6                                                      Road_Stat=Long_Bend;
  210   6                                              }
  211   5                                              else
  212   5                                              {
  213   6                                                      Road_Stat=Short_Bend;
  214   6                                              }
  215   5                                              Bend_Time=0;
  216   5                                              Accel_Time=0;
  217   5                                      }
  218   4                              }
  219   3                              else
  220   3                              {
  221   4                                      Bend_Time=0;
  222   4                              }
  223   3                              return Long_add;
  224   3                              break;
  225   3                      }
  226   2                      case Short_Bend:
  227   2                      {
  228   3                              Motor_Update(Bend_speed);
  229   3                              if(abs(dajiao)>Bend_Flag_Value)
  230   3                              {
  231   4                                      Short_Time=0;
  232   4                              }
  233   3                              else
  234   3                              {
  235   4                                      Short_Time++;
  236   4                                      if(Short_Time>Short_Judge_Time)
  237   4                                      {
  238   5                                              Short_Time=0;
  239   5                                              Road_Stat=Short_Str;
  240   5                                      }
  241   4                              }
  242   3                              return Bend_speed;
  243   3                              break;
  244   3                      }
  245   2                      case Long_Bend:
  246   2                      {
  247   3                              SLOW_Time++;
  248   3                              if(SLOW_Time>L_Turn_B_Slow_Time)
  249   3                              {
  250   4                                      Motor_Update(Bend_speed);//减速
  251   4                              }
  252   3                              else
  253   3                              {
  254   4                                      Motor_Update(L_Turn_B_Slow_Value);
  255   4                              }
C251 COMPILER V5.60.0,  Strategy                                                           14/10/25  22:38:45  PAGE 5   

  256   3                              //检查是否回到了直道
  257   3                              if(abs(dajiao)<Bend_Flag_Value)
  258   3                              {
  259   4                                      Short_Time++;
  260   4                                      if(Short_Time>Short_Judge_Time)
  261   4                                      {
  262   5                                              Short_Time=0;
  263   5                                              SLOW_Time=0;
  264   5                                              Road_Stat=Short_Str;
  265   5                                      }
  266   4                                      
  267   4                              }
  268   3                              else
  269   3                              {
  270   4                                      Short_Time=0;
  271   4                              }
  272   3                              if(SLOW_Time>L_Turn_B_Slow_Time)
  273   3                              {
  274   4                                      return Bend_speed;
  275   4                              }
  276   3                              else
  277   3                              {
  278   4                                      return L_Turn_B_Slow_Value;
  279   4                              }
  280   3                              
  281   3                              break;
  282   3                      }
  283   2                      default :
  284   2                      {
  285   3                              CAR_STOP();
  286   3                              return 0;
  287   3                              break;
  288   3                      }
  289   2              
  290   2              }
  291   1      }


Module Information          Static   Overlayable
------------------------------------------------
  code size            =      1349     ------
  ecode size           =    ------     ------
  data size            =    ------     ------
  idata size           =    ------     ------
  pdata size           =    ------     ------
  xdata size           =        29          2
  xdata-const size     =    ------     ------
  edata size           =    ------     ------
  bit size             =    ------     ------
  ebit size            =    ------     ------
  bitaddressable size  =    ------     ------
  ebitaddressable size =    ------     ------
  far data size        =    ------     ------
  huge data size       =    ------     ------
  const size           =    ------     ------
  hconst size          =       109     ------
End of Module Information.


C251 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
