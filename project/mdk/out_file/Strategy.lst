C251 COMPILER V5.60.0,  Strategy                                                           10/10/25  23:25:45  PAGE 1   


C251 COMPILER V5.60.0, COMPILATION OF MODULE Strategy
OBJECT MODULE PLACED IN .\out_file\Strategy.obj
COMPILER INVOKED BY: D:\keil\C251\BIN\C251.EXE ..\code\Strategy.c LARGE NOALIAS FLOAT64 WARNINGLEVEL(3) OPTIMIZE(3,SIZE)
                    - BROWSE INCDIR(..\..\libraries\zf_common;..\..\libraries\zf_components;..\..\libraries\zf_device;..\..\libraries\zf_driv
                    -er;..\user;..\code) DEBUG PRINT(.\out_file\Strategy.lst) OBJECT(.\out_file\Strategy.obj) 

stmt  level    source

    1          #include "Strategy.h"
    2          float uni=0;
    3          float last_uni=0;
    4          unsigned int if_time=0;
    5          unsigned int if2_time=0;
    6          unsigned int Continue_Time=0;
    7          unsigned char Enter_Flag_Left=0;
    8          unsigned char Cycle_Stat=EXIT;
    9          
   10          unsigned char Road_Stat=Normal_Str;
   11          unsigned int Short_Time=0;
   12          unsigned int Long_Time=0;
   13          unsigned int Bend_Time=0;
   14          unsigned int slow_Time=0;
   15          
   16          unsigned int Entern_Flag_Time=0;
   17          unsigned int Entern_Delay_Time=0;
   18          unsigned int Entern_Continue_Time=0;
   19          int turn_Value=0;
   20          int Mode_Flag=0;
   21          
   22          unsigned int Not_Time=0;
   23          //环岛判断
   24          void if_Cycle(void)
   25          {
   26   1              switch(Cycle_Stat)
   27   1              {
   28   2                      case EXIT:
   29   2                      {
   30   3                              
   31   3                              if(ADC_2==1023 || ADC_3==1023 )
   32   3                              {
   33   4                                      if_time++;
   34   4                                      if(if_time>Entern_Flag_Time)
   35   4                                      {
   36   5                                              Cycle_Stat=APPROACH;
   37   5                                              if_time=0;
   38   5                                      }
   39   4                              }
   40   3                              else
   41   3                              {
   42   4                                      if_time=0;
   43   4                              }
   44   3                              break;
   45   3                      }
   46   2                      case APPROACH:
   47   2                      {
   48   3      //                      if(ADC_2!=1023 || ADC_3!=1023)
   49   3      //                      {
   50   3                                      if2_time++;
   51   3                                      if(if2_time>Entern_Delay_Time)
   52   3                                      {
   53   4                                              Cycle_Stat=Left_ENTER;
   54   4                                              if2_time=0;
   55   4                                      }
   56   3      //                      }
   57   3                              break;
C251 COMPILER V5.60.0,  Strategy                                                           10/10/25  23:25:45  PAGE 2   

   58   3                      }
   59   2                      case Left_ENTER:
   60   2                      {
   61   3                              Enter_Flag_Left=1;
   62   3                              Buzzer_ON();
   63   3                              Continue_Time++;
   64   3                              if(Continue_Time>Entern_Continue_Time)
   65   3                              {
   66   4                                      Cycle_Stat=EXIT;
   67   4                                      Continue_Time = 0;  //
   68   4                      Enter_Flag_Left = 0;     //
   69   4                                      Buzzer_OFF();
   70   4                              }
   71   3                              break;
   72   3                      }
   73   2                      default :
   74   2                      {
   75   3                              CAR_STOP();
   76   3                              break;
   77   3                      }
   78   2              }
   79   1      
   80   1      }
   81          //切弯补丁
   82          int Help_turn()
   83          {
   84   1              int left  = ADC_1 + ADC_2;
   85   1              int right = ADC_3 + ADC_4;
   86   1              if (left < 200 && right < 200)
   87   1              {
   88   2                      // 同时满足，取较小一侧优先
   89   2                      if (left < right)
   90   2                              return -50;   // 左
   91   2                      else
   92   2                              return 50;    // 右
   93   2              }
   94   1              else if (left < 200)
   95   1              {
   96   2                      return -50;   // 左
   97   2              }
   98   1              else if (right < 200)
   99   1              {
  100   2                      return 50;    // 右
  101   2              }
  102   1              else
  103   1              {
  104   2                      return 0;     // 不转
  105   2              }
  106   1      }
  107          int Help_turn2(int temp,int value,int ADC_Flag)
  108          {
  109   1              int left  = ADC_1 + ADC_2;
  110   1              int right = ADC_3 + ADC_4;
  111   1              if (left < ADC_Flag && right < ADC_Flag)
  112   1              {
  113   2                      // 同时满足，取较小一侧优先
  114   2                      if (left < right)
  115   2                              return Servo_Mide-value;   // 左
  116   2                      else
  117   2                              return Servo_Mide+value;    // 右
  118   2              }
  119   1              else if (left < ADC_Flag)
  120   1              {
  121   2                      return Servo_Mide-value;   // 左
  122   2              }
  123   1              else if (right < ADC_Flag)
C251 COMPILER V5.60.0,  Strategy                                                           10/10/25  23:25:45  PAGE 3   

  124   1              {
  125   2                      return Servo_Mide+value;    // 右
  126   2              }
  127   1              else
  128   1              {
  129   2                      return temp;     // 不转
  130   2              }
  131   1      }
  132          void State_of_road(void)
  133          {
  134   1              switch(Road_Stat)
  135   1              {
  136   2                      case Normal_Str:
  137   2                      {
  138   3                              if(dajiao<Stright_Flag_Value && dajiao>-Stright_Flag_Value)
  139   3                              {
  140   4                                      Short_Time++;
  141   4                                      Bend_Time=0;
  142   4                                      if(Short_Time>Short_Judge_Time)
  143   4                                      {
  144   5                                              Buzzer_OFF();
  145   5                                              Short_Time=0;
  146   5                                              Road_Stat=Short_Str;
  147   5                                              Motor_Update(Short_add);
  148   5      //                                      tft180_show_string(0,0*16,"Short");
  149   5                                      }
  150   4                              }
  151   3                              else
  152   3                  {
  153   4                                      Bend_Time++;
  154   4                                      Short_Time=0; // 重要：条件不满足时重置计时
  155   4                                      if(Bend_Time>5)
  156   4                                      {
  157   5                                              Buzzer_ON();
  158   5                                              Bend_Time=0;
  159   5                                              Road_Stat=Bend;
  160   5                                              Motor_Update(0);
  161   5      //                                      tft180_show_string(0,0*16,"Bend");
  162   5                                      }
  163   4                      
  164   4                  }
  165   3                              break;
  166   3                      }
  167   2                      case Short_Str:
  168   2                      {
  169   3                              if(dajiao<Stright_Flag_Value && dajiao>-Stright_Flag_Value)
  170   3                              {
  171   4                                      Long_Time++;
  172   4                                      Not_Time=0;
  173   4                                      if(Long_Time>Long_Judge_Time)
  174   4                                      {
  175   5                                              Buzzer_OFF();
  176   5                                              Long_Time=0;
  177   5                                              Road_Stat=Long_Str;
  178   5                                              Motor_Update(Long_add);
  179   5      //                                      tft180_show_string(0,0*16,"Long");
  180   5                                      }
  181   4                              }
  182   3                              else
  183   3                              {
  184   4                                      Long_Time=0;
  185   4                                      Not_Time++;
  186   4                                      {
  187   5                                              if(Not_Time>10)
  188   5                                              {
  189   6                                                      Not_Time=0;
C251 COMPILER V5.60.0,  Strategy                                                           10/10/25  23:25:45  PAGE 4   

  190   6                                                      Road_Stat=Normal_Str;
  191   6      //                                              tft180_show_string(0,0*16,"Normal");
  192   6                                              }
  193   5                                      }
  194   4                              }
  195   3                              break;
  196   3                      }
  197   2                      case Long_Str:
  198   2                      {
  199   3                              if(dajiao>Bend_Flag_Value || dajiao<-Bend_Flag_Value)
  200   3                              {
  201   4                                      Bend_Time++;
  202   4                                      if(Bend_Time>5)
  203   4                                      {
  204   5                                              Buzzer_ON();
  205   5                                              Bend_Time=0;
  206   5                                              Road_Stat=Bend;
  207   5                                              Motor_Update(0);
  208   5      //                                      tft180_show_string(0,0*16,"Bend");
  209   5                                      }
  210   4                              
  211   4                              }
  212   3                              else
  213   3                              {
  214   4                                      Bend_Time=0;
  215   4                              }
  216   3                              break;
  217   3                      }
  218   2                      case Bend:
  219   2                      {
  220   3                              slow_Time++;
  221   3                              if(slow_Time<Bend_Slow_Time)
  222   3                              {
  223   4                                      Motor_Update(Bend_slow);
  224   4                              }
  225   3                              else
  226   3                              {
  227   4                                      if(dajiao>Bend_Flag_Value)
  228   4                                      {
  229   5                                              Motor_Update(0);
  230   5                                              Not_Time=0;
  231   5                                      }
  232   4                                      else if( dajiao<-Bend_Flag_Value)
  233   4                                      {
  234   5                                              Motor_Update(0);
  235   5                                              Not_Time=0;
  236   5                                      }
  237   4                                      else
  238   4                                      {
  239   5                                              Not_Time++;
  240   5                                              if(Not_Time>10)
  241   5                                              {
  242   6                                                      Buzzer_OFF();
  243   6                                                      Not_Time=0;
  244   6                                                      slow_Time=0;
  245   6                                                      Road_Stat=Normal_Str;
  246   6                                                      Motor_Update(0);
  247   6                                              }
  248   5      //                                      tft180_show_string(0,0*16,"Normal");
  249   5                                      }
  250   4                              }
  251   3                              break;
  252   3                      }
  253   2                      default :
  254   2                      {
  255   3                              Buzzer_OFF();
C251 COMPILER V5.60.0,  Strategy                                                           10/10/25  23:25:45  PAGE 5   

  256   3                              CAR_STOP();
  257   3                              break;
  258   3                      }
  259   2              
  260   2              }       
  261   1      
  262   1      }


Module Information          Static   Overlayable
------------------------------------------------
  code size            =      1118     ------
  ecode size           =    ------     ------
  data size            =    ------     ------
  idata size           =    ------     ------
  pdata size           =    ------     ------
  xdata size           =        37     ------
  xdata-const size     =    ------     ------
  edata size           =    ------     ------
  bit size             =    ------     ------
  ebit size            =    ------     ------
  bitaddressable size  =    ------     ------
  ebitaddressable size =    ------     ------
  far data size        =    ------     ------
  huge data size       =    ------     ------
  const size           =    ------     ------
  hconst size          =       127     ------
End of Module Information.


C251 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
