C251 COMPILER V5.60.0,  Strategy                                                           11/10/25  22:11:22  PAGE 1   


C251 COMPILER V5.60.0, COMPILATION OF MODULE Strategy
OBJECT MODULE PLACED IN .\out_file\Strategy.obj
COMPILER INVOKED BY: D:\keil\C251\BIN\C251.EXE ..\code\Strategy.c LARGE NOALIAS FLOAT64 WARNINGLEVEL(3) OPTIMIZE(3,SIZE)
                    - BROWSE INCDIR(..\..\libraries\zf_common;..\..\libraries\zf_components;..\..\libraries\zf_device;..\..\libraries\zf_driv
                    -er;..\user;..\code) DEBUG PRINT(.\out_file\Strategy.lst) OBJECT(.\out_file\Strategy.obj) 

stmt  level    source

    1          #include "Strategy.h"
    2          unsigned int if_time=0;
    3          unsigned int if2_time=0;
    4          unsigned int Continue_Time=0;
    5          unsigned char Enter_Flag_Left=0;
    6          unsigned char Cycle_Stat=EXIT;
    7          
    8          unsigned char Road_Stat=Normal_Str;
    9          unsigned int Short_Time=0;
   10          unsigned int Long_Time=0;
   11          unsigned int Bend_Time=0;
   12          
   13          unsigned int Entern_Flag_Time=0;
   14          unsigned int Entern_Delay_Time=0;
   15          unsigned int Entern_Continue_Time=0;
   16          int turn_Value=0;
   17          int Mode_Flag=0;
   18          
   19          unsigned int Not_Time=0;
   20          //环岛判断
   21          void if_Cycle(void)
   22          {
   23   1              switch(Cycle_Stat)
   24   1              {
   25   2                      case EXIT:
   26   2                      {
   27   3                              
   28   3                              if(ADC_2==1023 || ADC_3==1023 )
   29   3                              {
   30   4                                      if_time++;
   31   4                                      if(if_time>Entern_Flag_Time)
   32   4                                      {
   33   5                                              Cycle_Stat=APPROACH;
   34   5                                              if_time=0;
   35   5                                      }
   36   4                              }
   37   3                              else
   38   3                              {
   39   4                                      if_time=0;
   40   4                              }
   41   3                              break;
   42   3                      }
   43   2                      case APPROACH:
   44   2                      {
   45   3      //                      if(ADC_2!=1023 || ADC_3!=1023)
   46   3      //                      {
   47   3                                      if2_time++;
   48   3                                      if(if2_time>Entern_Delay_Time)
   49   3                                      {
   50   4                                              Cycle_Stat=Left_ENTER;
   51   4                                              if2_time=0;
   52   4                                      }
   53   3      //                      }
   54   3                              break;
   55   3                      }
   56   2                      case Left_ENTER:
   57   2                      {
C251 COMPILER V5.60.0,  Strategy                                                           11/10/25  22:11:22  PAGE 2   

   58   3                              Enter_Flag_Left=1;
   59   3                              Buzzer_ON();
   60   3                              Continue_Time++;
   61   3                              if(Continue_Time>Entern_Continue_Time)
   62   3                              {
   63   4                                      Cycle_Stat=EXIT;
   64   4                                      Continue_Time = 0;  //
   65   4                      Enter_Flag_Left = 0;     //
   66   4                                      Buzzer_OFF();
   67   4                              }
   68   3                              break;
   69   3                      }
   70   2                      default :
   71   2                      {
   72   3                              CAR_STOP();
   73   3                              break;
   74   3                      }
   75   2              }
   76   1      
   77   1      }
   78          //切弯补丁
   79          int Help_turn()
   80          {
   81   1              int left  = ADC_1 + ADC_2;
   82   1              int right = ADC_3 + ADC_4;
   83   1              if (left < 200 && right < 200)
   84   1              {
   85   2                      // 同时满足，取较小一侧优先
   86   2                      if (left < right)
   87   2                              return -50;   // 左
   88   2                      else
   89   2                              return 50;    // 右
   90   2              }
   91   1              else if (left < 200)
   92   1              {
   93   2                      return -50;   // 左
   94   2              }
   95   1              else if (right < 200)
   96   1              {
   97   2                      return 50;    // 右
   98   2              }
   99   1              else
  100   1              {
  101   2                      return 0;     // 不转
  102   2              }
  103   1      }
  104          int Help_turn2(int temp,int value,int ADC_Flag)
  105          {
  106   1              int left  = ADC_1 + ADC_2;
  107   1              int right = ADC_3 + ADC_4;
  108   1              if (left < ADC_Flag && right < ADC_Flag)
  109   1              {
  110   2                      // 同时满足，取较小一侧优先
  111   2                      if (left < right)
  112   2                              return Servo_Mide-value;   // 左
  113   2                      else
  114   2                              return Servo_Mide+value;    // 右
  115   2              }
  116   1              else if (left < ADC_Flag)
  117   1              {
  118   2                      return Servo_Mide-value;   // 左
  119   2              }
  120   1              else if (right < ADC_Flag)
  121   1              {
  122   2                      return Servo_Mide+value;    // 右
  123   2              }
C251 COMPILER V5.60.0,  Strategy                                                           11/10/25  22:11:22  PAGE 3   

  124   1              else
  125   1              {
  126   2                      return temp;     
  127   2              }
  128   1      }
  129          void State_of_road(void)
  130          {
  131   1              switch(Road_Stat)
  132   1              {
  133   2                      case Normal_Str:
  134   2                      {
  135   3                              Motor_Update(0);
  136   3                              if(dajiao<Stright_Flag_Value && dajiao>-Stright_Flag_Value)
  137   3                              {
  138   4                                      Short_Time++;
  139   4                                      Bend_Time=0;
  140   4                                      if(Short_Time>Short_Judge_Time)
  141   4                                      {
  142   5      //                                      Buzzer_OFF();
  143   5                                              Short_Time=0;
  144   5                                              Road_Stat=Short_Str;
  145   5                                      }
  146   4                              }
  147   3                              else
  148   3                  {
  149   4                                      Bend_Time++;
  150   4                                      Short_Time=0; // 重要：条件不满足时重置计时
  151   4                                      if(Bend_Time>10)
  152   4                                      {
  153   5      //                                      Buzzer_ON();
  154   5                                              Bend_Time=0;
  155   5                                              Road_Stat=Bend;
  156   5                                      }
  157   4                      
  158   4                  }
  159   3                              break;
  160   3                      }
  161   2                      case Short_Str:
  162   2                      {
  163   3                              Motor_Update(Short_add);
  164   3                              if(dajiao<Stright_Flag_Value && dajiao>-Stright_Flag_Value)
  165   3                              {
  166   4                                      Long_Time++;
  167   4                                      Not_Time=0;
  168   4                                      if(Long_Time>Long_Judge_Time)
  169   4                                      {
  170   5      //                                      Buzzer_OFF();
  171   5                                              Long_Time=0;
  172   5                                              Road_Stat=Long_Str;
  173   5                                      }
  174   4                              }
  175   3                              else
  176   3                              {
  177   4                                      Long_Time=0;
  178   4                                      Not_Time++;
  179   4                                      {
  180   5                                              if(Not_Time>No_Tim)
  181   5                                              {
  182   6                                                      Not_Time=0;
  183   6                                                      Road_Stat=Normal_Str;
  184   6                                              }
  185   5                                      }
  186   4                              }
  187   3                              break;
  188   3                      }
  189   2                      case Long_Str:
C251 COMPILER V5.60.0,  Strategy                                                           11/10/25  22:11:22  PAGE 4   

  190   2                      {
  191   3                              Motor_Update(Long_add);
  192   3                              if(dajiao>Bend_Flag_Value || dajiao<-Bend_Flag_Value)
  193   3                              {
  194   4                                      Bend_Time++;
  195   4                                      if(Bend_Time>5)
  196   4                                      {
  197   5      //                                      Buzzer_ON();
  198   5                                              Bend_Time=0;
  199   5                                              Road_Stat=Bend;
  200   5                                      }
  201   4                              
  202   4                              }
  203   3                              else
  204   3                              {
  205   4                                      Bend_Time=0;
  206   4                              }
  207   3                              break;
  208   3                      }
  209   2                      case Bend:
  210   2                      {
  211   3                              Motor_Update(Bend_slow);
  212   3                              if(dajiao>Bend_Flag_Value)
  213   3                              {
  214   4                                      Not_Time=0;
  215   4                              }
  216   3                              else if( dajiao<-Bend_Flag_Value)
  217   3                              {
  218   4                                      Not_Time=0;
  219   4                              }
  220   3                              else
  221   3                              {
  222   4                                      Not_Time++;
  223   4                                      if(Not_Time>No_Tim)
  224   4                                      {
  225   5      //                                      Buzzer_OFF();
  226   5                                              Not_Time=0;
  227   5                                              Road_Stat=Normal_Str;
  228   5                                      }
  229   4      //                                      tft180_show_string(0,0*16,"Normal");
  230   4                              }
  231   3                              break;
  232   3                      }
  233   2                      default :
  234   2                      {
  235   3      //                      Buzzer_OFF();
  236   3                              CAR_STOP();
  237   3                              break;
  238   3                      }
  239   2              
  240   2              }       
  241   1      
  242   1      }


Module Information          Static   Overlayable
------------------------------------------------
  code size            =      1063     ------
  ecode size           =    ------     ------
  data size            =    ------     ------
  idata size           =    ------     ------
  pdata size           =    ------     ------
  xdata size           =        27     ------
  xdata-const size     =    ------     ------
  edata size           =    ------     ------
  bit size             =    ------     ------
  ebit size            =    ------     ------
C251 COMPILER V5.60.0,  Strategy                                                           11/10/25  22:11:22  PAGE 5   

  bitaddressable size  =    ------     ------
  ebitaddressable size =    ------     ------
  far data size        =    ------     ------
  huge data size       =    ------     ------
  const size           =    ------     ------
  hconst size          =       102     ------
End of Module Information.


C251 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
