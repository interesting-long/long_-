C251 COMPILER V5.60.0,  main                                                               08/10/25  13:56:11  PAGE 1   


C251 COMPILER V5.60.0, COMPILATION OF MODULE main
OBJECT MODULE PLACED IN .\out_file\main.obj
COMPILER INVOKED BY: D:\keil\C251\BIN\C251.EXE ..\user\main.c LARGE NOALIAS FLOAT64 WARNINGLEVEL(3) OPTIMIZE(3,SIZE) BRO
                    -WSE INCDIR(..\..\libraries\zf_common;..\..\libraries\zf_components;..\..\libraries\zf_device;..\..\libraries\zf_driver;.
                    -.\user;..\code) DEBUG PRINT(.\out_file\main.lst) OBJECT(.\out_file\main.obj) 

stmt  level    source

    1          #include "zf_common_headfile.h"
    2          int T=0;
    3          
    4          int T4=0;
    5          int Init_Time=0;
    6          unsigned char PIT0_Flag=0;
    7          unsigned char PIT1_Flag=0;
    8          
    9          void pit_handler0 (void);
   10          void pit_handler1 (void);
   11          void main()
   12          {
   13   1              clock_init(SYSTEM_CLOCK_40M);                           // 务必保留
   14   1              debug_init();                                                           // 务必保留
   15   1              /****************************************************/
   16   1              init_all();
   17   1              tim0_irq_handler = pit_handler0;// 设置定时器0中断回调函数
   18   1              tim1_irq_handler = pit_handler1;// 设置定时器1中断回调函数
   19   1          while(1)
   20   1              {
   21   2                      switch(CAR_Mode)
   22   2                      {
   23   3                              case STOP:
   24   3                              {
   25   4                                      if(Init_Flag==1)
   26   4                                      {
   27   5                                              Turn_mode_Init();
   28   5                                              Init_Flag=0;
   29   5                                      }
   30   4                                      if(Key)
   31   4                                      {
   32   5                                              EA=0;
   33   5                                              menu_handle_key(Key);
   34   5                                              Key=0;
   35   5                                              EA=1;
   36   5                                      }
   37   4                                      break;
   38   4                              }
   39   3                              case GO:
   40   3                              {
   41   4                                      GO_Function();
   42   4                                      break;
   43   4                              }
   44   3                              case GO_Pararm1: 
   45   3                              {
   46   4                                      GO_Function();
   47   4                                      break;
   48   4                              }
   49   3                              case GO_Pararm2: 
   50   3                              {
   51   4                                      GO_Function();
   52   4                                      break;
   53   4                              }
   54   3                              case GO_Pararm3: 
   55   3                              {
   56   4                                      GO_Function();
   57   4                                      break;
C251 COMPILER V5.60.0,  main                                                               08/10/25  13:56:11  PAGE 2   

   58   4                              }
   59   3                              case TEST_PWM: 
   60   3                              {
   61   4                                      if(Init_Flag==1)
   62   4                                      {
   63   5                                              Turn_mode_Init();
   64   5                                              Init_Flag=0;
   65   5                                      }
   66   4                                      PWM_Test();
   67   4                                      break;
   68   4                              }
   69   3                              case TEST_SERVO: 
   70   3                              {
   71   4                                      if(Init_Flag==1)
   72   4                                      {
   73   5                                              Turn_mode_Init();
   74   5                                              Init_Flag=0;
   75   5                                      }
   76   4                                      Serve_Test();
   77   4                                      break;
   78   4                              }
   79   3                              case ADC_Show:
   80   3                              {
   81   4                                      if(Init_Flag==1)
   82   4                                      {
   83   5                                              Turn_mode_Init();
   84   5                                              Init_Flag=0;
   85   5                                      }
   86   4                                      break;
   87   4                              }
   88   3                              case Seta_Servo:
   89   3                              {
   90   4                                      if(Init_Flag==1)
   91   4                                      {
   92   5                                              Turn_mode_Init();
   93   5                                              Init_Flag=0;
   94   5                                      }
   95   4                                      else
   96   4                                      {
   97   5                                              Set_Sevo();
   98   5                                      }
   99   4                                      break;
  100   4                              }
  101   3                              
  102   3                      }
  103   2                      if(ADC_Show_Flag)
  104   2                      {
  105   3                              EA=0;
  106   3                              if(++T>=10)
  107   3                              {
  108   4                                      Buzzer_OFF();
  109   4                                      T=0;
  110   4                                      Show_pararm();
  111   4                              }
  112   3                              EA=1;
  113   3                      }
  114   2      
  115   2         }
  116   1      }
  117          void pit_handler0(void)
  118          {
  119   1              Protect();
  120   1              if(Servo_Flag)
  121   1              {
  122   2                      if(Enter_Flag_Left)
  123   2                      {
C251 COMPILER V5.60.0,  main                                                               08/10/25  13:56:11  PAGE 3   

  124   3                              if(Mode_Flag<-2)//左圆环
  125   3                              {
  126   4                                      pwm_set_duty(Servo_Pwm,Servo_Mide+turn_Value);
  127   4                              }
  128   3                              else if(Mode_Flag>2)//右圆环
  129   3                              {
  130   4                                      pwm_set_duty(Servo_Pwm,Servo_Mide-turn_Value);
  131   4                              }
  132   3                              else
  133   3                              {
  134   4                                      pwm_set_duty(Servo_Pwm,Help_turn2(Servo_Mide+dajiao,Help_Value2,ADC_Falg));
  135   4                              }
  136   3                      }
  137   2                      else
  138   2                      {
  139   3                              pwm_set_duty(Servo_Pwm,Help_turn2(Servo_Mide+dajiao,Help_Value2,ADC_Falg));
  140   3                      }
  141   2                      
  142   2              }
  143   1              
  144   1              if(Key_Flag)
  145   1              {
  146   2                      Key_scaner();
  147   2              }
  148   1      //      if(CAR_Mode!=STOP)
  149   1      //      {
  150   1      //              State_of_road();
  151   1      //      }
  152   1      
  153   1      }
  154          
  155          void pit_handler1(void)
  156          {
  157   1              ADC_SampleAndFilter();
  158   1              dajiao=Servo_turn_pid(unification());
  159   1                      if_Cycle();
  160   1      }


Module Information          Static   Overlayable
------------------------------------------------
  code size            =       553     ------
  ecode size           =    ------     ------
  data size            =    ------     ------
  idata size           =    ------     ------
  pdata size           =    ------     ------
  xdata size           =         8     ------
  xdata-const size     =    ------     ------
  edata size           =    ------     ------
  bit size             =    ------     ------
  ebit size            =    ------     ------
  bitaddressable size  =    ------     ------
  ebitaddressable size =    ------     ------
  far data size        =    ------     ------
  huge data size       =    ------     ------
  const size           =    ------     ------
  hconst size          =        35     ------
End of Module Information.


C251 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
