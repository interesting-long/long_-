C251 COMPILER V5.60.0,  main                                                               01/10/25  18:12:25  PAGE 1   


C251 COMPILER V5.60.0, COMPILATION OF MODULE main
OBJECT MODULE PLACED IN .\out_file\main.obj
COMPILER INVOKED BY: D:\keil\C251\BIN\C251.EXE ..\user\main.c LARGE NOALIAS FLOAT64 WARNINGLEVEL(3) OPTIMIZE(3,SIZE) BRO
                    -WSE INCDIR(..\..\libraries\zf_common;..\..\libraries\zf_components;..\..\libraries\zf_device;..\..\libraries\zf_driver;.
                    -.\user;..\code) DEBUG PRINT(.\out_file\main.lst) OBJECT(.\out_file\main.obj) 

stmt  level    source

    1          #include "zf_common_headfile.h"
    2          int T=0;
    3          
    4          int T4=0;
    5          int Init_Time=0;
    6          unsigned char PIT0_Flag=0;
    7          unsigned char PIT1_Flag=0;
    8          
    9          void pit_handler0 (void);
   10          void pit_handler1 (void);
   11          void main()
   12          {
   13   1              clock_init(SYSTEM_CLOCK_40M);                           // 务必保留
   14   1              debug_init();                                                           // 务必保留
   15   1              /****************************************************/
   16   1              init_all();
   17   1              tim0_irq_handler = pit_handler0;// 设置定时器0中断回调函数
   18   1              tim1_irq_handler = pit_handler1;// 设置定时器1中断回调函数
   19   1              
   20   1          while(1)
   21   1              {
   22   2                      switch(CAR_Mode)
   23   2                      {
   24   3                              case STOP:
   25   3                              {
   26   4      
   27   4                                      if(Init_Flag==1)
   28   4                                      {
   29   5                                              Turn_mode_Init();
   30   5                                              Init_Flag=0;
   31   5                                      }
   32   4                                      if(Key)
   33   4                                      {
   34   5                                              EA=0;
   35   5                                              menu_handle_key(Key);
   36   5                                              Key=0;
   37   5                                              EA=1;
   38   5                                      }
   39   4                                      break;
   40   4                              }
   41   3                              case GO:
   42   3                              {
   43   4                                      GO_Function();
   44   4                                      break;
   45   4                              }
   46   3                              case GO_Pararm1: 
   47   3                              {
   48   4                                      GO_Function();
   49   4                                      break;
   50   4                              }
   51   3                              case GO_Pararm2: 
   52   3                              {
   53   4                                      GO_Function();
   54   4                                      break;
   55   4                              }
   56   3                              case GO_Pararm3: 
   57   3                              {
C251 COMPILER V5.60.0,  main                                                               01/10/25  18:12:25  PAGE 2   

   58   4                                      GO_Function();
   59   4                                      break;
   60   4                              }
   61   3                              case TEST_PWM: 
   62   3                              {
   63   4                                      if(Init_Flag==1)
   64   4                                      {
   65   5                                              EA=0;
   66   5                                              Turn_mode_Init();
   67   5                                              Init_Flag=0;
   68   5                                              EA=1;
   69   5                                      }
   70   4                                      PWM_Test();
   71   4                                      break;
   72   4                              }
   73   3                              case TEST_SERVO: 
   74   3                              {
   75   4                                      if(Init_Flag==1)
   76   4                                      {
   77   5                                              EA=0;
   78   5                                              Turn_mode_Init();
   79   5                                              Init_Flag=0;
   80   5                                              EA=1;
   81   5                                      }
   82   4                                      Serve_Test();
   83   4                                      break;
   84   4                              }
   85   3                              case ADC_Show:
   86   3                              {
   87   4                                      if(Init_Flag==1)
   88   4                                      {
   89   5                                              Turn_mode_Init();
   90   5                                              Init_Flag=0;
   91   5                                      }
   92   4                                      break;
   93   4                              }
   94   3                              case Seta_Servo:
   95   3                              {
   96   4                                      if(Init_Flag==1)
   97   4                                      {
   98   5                                              Turn_mode_Init();
   99   5                                              Init_Flag=0;
  100   5                                      }
  101   4                                      else
  102   4                                      {
  103   5                                              Set_Sevo();
  104   5                                      }
  105   4                                      break;
  106   4                              }
  107   3                      }
  108   2                      
  109   2                      if(PIT1_Flag)
  110   2                      {
  111   3                              PIT1_Flag=0;
  112   3                              ADC_SampleAndFilter();
  113   3                              dajiao=Servo_turn_pid(unification());
  114   3                              if(ADC_Show_Flag)
  115   3                              {
  116   4                                      if(++T>=100)
  117   4                                      {
  118   5                                              T=0;
  119   5                                              Show_pararm();
  120   5                                      }
  121   4                              }
  122   3                      }
  123   2                      if(PIT0_Flag)
C251 COMPILER V5.60.0,  main                                                               01/10/25  18:12:25  PAGE 3   

  124   2                      {
  125   3                              PIT0_Flag=0;
  126   3                              Protect();
  127   3                              if(Servo_Flag)
  128   3                              {
  129   4                                      pwm_set_duty(Servo_Pwm,Servo_Mide-dajiao);
  130   4                              }
  131   3                              if(Key_Flag)
  132   3                              {
  133   4                                      Key_scaner();
  134   4                              }
  135   3                      }
  136   2      
  137   2         }
  138   1      }
  139          void pit_handler0(void)
  140          {
  141   1              PIT0_Flag=1;
  142   1      //      T3++;
  143   1      //      if(T3>50)
  144   1      //      {
  145   1      //              T3=0;
  146   1      //              Set_T++;
  147   1      //      }
  148   1      
  149   1      }
  150          
  151          void pit_handler1(void)
  152          {
  153   1              PIT1_Flag=1;
  154   1      }


Module Information          Static   Overlayable
------------------------------------------------
  code size            =       421     ------
  ecode size           =    ------     ------
  data size            =    ------     ------
  idata size           =    ------     ------
  pdata size           =    ------     ------
  xdata size           =         8     ------
  xdata-const size     =    ------     ------
  edata size           =    ------     ------
  bit size             =    ------     ------
  ebit size            =    ------     ------
  bitaddressable size  =    ------     ------
  ebitaddressable size =    ------     ------
  far data size        =    ------     ------
  huge data size       =    ------     ------
  const size           =    ------     ------
  hconst size          =        35     ------
End of Module Information.


C251 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
