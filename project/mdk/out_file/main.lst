C251 COMPILER V5.60.0,  main                                                               05/10/25  12:59:43  PAGE 1   


C251 COMPILER V5.60.0, COMPILATION OF MODULE main
OBJECT MODULE PLACED IN .\out_file\main.obj
COMPILER INVOKED BY: D:\keil\C251\BIN\C251.EXE ..\user\main.c LARGE NOALIAS FLOAT64 WARNINGLEVEL(3) OPTIMIZE(3,SIZE) BRO
                    -WSE INCDIR(..\..\libraries\zf_common;..\..\libraries\zf_components;..\..\libraries\zf_device;..\..\libraries\zf_driver;.
                    -.\user;..\code) DEBUG PRINT(.\out_file\main.lst) OBJECT(.\out_file\main.obj) 

stmt  level    source

    1          #include "zf_common_headfile.h"
    2          int T=0;
    3          
    4          int T4=0;
    5          int Init_Time=0;
    6          unsigned char PIT0_Flag=0;
    7          unsigned char PIT1_Flag=0;
    8          
    9          void pit_handler0 (void);
   10          void pit_handler1 (void);
   11          void main()
   12          {
   13   1              clock_init(SYSTEM_CLOCK_40M);                           // 务必保留
   14   1              debug_init();                                                           // 务必保留
   15   1              /****************************************************/
   16   1              init_all();
   17   1              tim0_irq_handler = pit_handler0;// 设置定时器0中断回调函数
   18   1              tim1_irq_handler = pit_handler1;// 设置定时器1中断回调函数
   19   1              Buzzer_OFF();
   20   1          while(1)
   21   1              {
   22   2                      switch(CAR_Mode)
   23   2                      {
   24   3                              case STOP:
   25   3                              {
   26   4                                      if(Init_Flag==1)
   27   4                                      {
   28   5                                              Turn_mode_Init();
   29   5                                              Init_Flag=0;
   30   5                                      }
   31   4                                      if(Key)
   32   4                                      {
   33   5                                              EA=0;
   34   5                                              menu_handle_key(Key);
   35   5                                              Key=0;
   36   5                                              EA=1;
   37   5                                      }
   38   4                                      break;
   39   4                              }
   40   3                              case GO:
   41   3                              {
   42   4                                      GO_Function();
   43   4                                      MotorR_SetSpeed(100*20);
   44   4                                      MotorL_SetSpeed(100*20);
   45   4                                      break;
   46   4                              }
   47   3                              case GO_Pararm1: 
   48   3                              {
   49   4                                      GO_Function();
   50   4                                      break;
   51   4                              }
   52   3                              case GO_Pararm2: 
   53   3                              {
   54   4                                      GO_Function();
   55   4                                      break;
   56   4                              }
   57   3                              case GO_Pararm3: 
C251 COMPILER V5.60.0,  main                                                               05/10/25  12:59:43  PAGE 2   

   58   3                              {
   59   4                                      GO_Function();
   60   4                                      break;
   61   4                              }
   62   3                              case TEST_PWM: 
   63   3                              {
   64   4                                      if(Init_Flag==1)
   65   4                                      {
   66   5                                              EA=0;
   67   5                                              Turn_mode_Init();
   68   5                                              Init_Flag=0;
   69   5                                              EA=1;
   70   5                                      }
   71   4                                      PWM_Test();
   72   4                                      break;
   73   4                              }
   74   3                              case TEST_SERVO: 
   75   3                              {
   76   4                                      if(Init_Flag==1)
   77   4                                      {
   78   5                                              EA=0;
   79   5                                              Turn_mode_Init();
   80   5                                              Init_Flag=0;
   81   5                                              EA=1;
   82   5                                      }
   83   4                                      Serve_Test();
   84   4                                      break;
   85   4                              }
   86   3                              case ADC_Show:
   87   3                              {
   88   4                                      if(Init_Flag==1)
   89   4                                      {
   90   5                                              Turn_mode_Init();
   91   5                                              Init_Flag=0;
   92   5                                      }
   93   4                                      break;
   94   4                              }
   95   3                              case Seta_Servo:
   96   3                              {
   97   4                                      if(Init_Flag==1)
   98   4                                      {
   99   5                                              Turn_mode_Init();
  100   5                                              Init_Flag=0;
  101   5                                      }
  102   4                                      else
  103   4                                      {
  104   5                                              Set_Sevo();
  105   5                                      }
  106   4                                      break;
  107   4                              }
  108   3                      }
  109   2         }
  110   1      }
  111          void pit_handler0(void)
  112          {
  113   1              Protect();
  114   1              if(Servo_Flag)
  115   1              {
  116   2                      if(Enter_Flag_Left)
  117   2                      {
  118   3                              if(Mode_Flag<-2)//左圆环
  119   3                              {
  120   4                                      pwm_set_duty(Servo_Pwm,Servo_Mide+turn_Value);
  121   4                              }
  122   3                              else if(Mode_Flag>2)//右圆环
  123   3                              {
C251 COMPILER V5.60.0,  main                                                               05/10/25  12:59:43  PAGE 3   

  124   4                                      pwm_set_duty(Servo_Pwm,Servo_Mide-turn_Value);
  125   4                              }
  126   3                              else
  127   3                              {
  128   4                                      pwm_set_duty(Servo_Pwm,Servo_Mide+dajiao);
  129   4                              }
  130   3                      }
  131   2                      else
  132   2                      {
  133   3                              pwm_set_duty(Servo_Pwm,Servo_Mide+dajiao);
  134   3                      }
  135   2                      
  136   2              }
  137   1              if(ADC_Show_Flag)
  138   1              {
  139   2                      if(++T>=10)
  140   2                      {
  141   3                              T=0;
  142   3                              Show_pararm();
  143   3                      }
  144   2              }
  145   1              if(Key_Flag)
  146   1              {
  147   2                      Key_scaner();
  148   2              }
  149   1      
  150   1      }
  151          
  152          void pit_handler1(void)
  153          {
  154   1              ADC_SampleAndFilter();
  155   1              dajiao=Servo_turn_pid(unification());
  156   1              if_Cycle();
  157   1      //      State_of_road();
  158   1      //      
  159   1      }


Module Information          Static   Overlayable
------------------------------------------------
  code size            =       485     ------
  ecode size           =    ------     ------
  data size            =    ------     ------
  idata size           =    ------     ------
  pdata size           =    ------     ------
  xdata size           =         8     ------
  xdata-const size     =    ------     ------
  edata size           =    ------     ------
  bit size             =    ------     ------
  ebit size            =    ------     ------
  bitaddressable size  =    ------     ------
  ebitaddressable size =    ------     ------
  far data size        =    ------     ------
  huge data size       =    ------     ------
  const size           =    ------     ------
  hconst size          =        35     ------
End of Module Information.


C251 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
