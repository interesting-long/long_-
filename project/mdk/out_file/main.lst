C251 COMPILER V5.60.0,  main                                                               01/11/25  17:49:50  PAGE 1   


C251 COMPILER V5.60.0, COMPILATION OF MODULE main
OBJECT MODULE PLACED IN .\out_file\main.obj
COMPILER INVOKED BY: D:\keil\C251\BIN\C251.EXE ..\user\main.c LARGE NOALIAS FLOAT64 WARNINGLEVEL(3) OPTIMIZE(3,SIZE) BRO
                    -WSE INCDIR(..\..\libraries\zf_common;..\..\libraries\zf_components;..\..\libraries\zf_device;..\..\libraries\zf_driver;.
                    -.\user;..\code) DEBUG PRINT(.\out_file\main.lst) OBJECT(.\out_file\main.obj) 

stmt  level    source

    1          #include "zf_common_headfile.h"
    2          int T=0;
    3          int delta_Speed=0;
    4          
    5          int T4=0;
    6          unsigned char speed_update_flag=0;
    7          
    8          int current_delta_angle=0;
    9          float delta_angle_buffer=0;
   10          long int encoder=0;
   11          void pit_handler1 (void);
   12          //void pit_handler2 (void);
   13          void main()
   14          {
   15   1              clock_init(SYSTEM_CLOCK_40M);                           // 务必保留
   16   1              debug_init();                                                           // 务必保留
   17   1              /****************************************************/
   18   1              init_all();
   19   1              tim1_irq_handler = pit_handler1;// 设置定时器0中断回调函数
   20   1      //      tim2_irq_handler = pit_handler2;// 设置定时器1中断回调函数
   21   1          while(1)
   22   1              {
   23   2                      
   24   2                      switch(CAR_Mode)
   25   2                      {
   26   3                              case STOP:
   27   3                              {
   28   4                                      GO_Function();
   29   4                                      if(Key)
   30   4                                      {
   31   5                                              EA=0;
   32   5                                              menu_handle_key(Key);
   33   5                                              Key=0;
   34   5                                              EA=1;
   35   5                                      }
   36   4                                      break;
   37   4                              }
   38   3                              case GO:
   39   3                              {
   40   4                                      GO_Function();
   41   4                                      break;
   42   4                              }
   43   3                              case GO_Pararm1: 
   44   3                              {
   45   4                                      GO_Function();
   46   4                                      break;
   47   4                              }
   48   3                              case GO_Pararm2: 
   49   3                              {
   50   4                                      GO_Function();
   51   4                                      break;
   52   4                              }
   53   3                              case GO_Pararm3: 
   54   3                              {
   55   4                                      GO_Function();
   56   4                                      break;
   57   4                              }
C251 COMPILER V5.60.0,  main                                                               01/11/25  17:49:50  PAGE 2   

   58   3                              case TEST_PWM: 
   59   3                              {
   60   4                                      GO_Function();
   61   4                                      PWM_Test();
   62   4                                      break;
   63   4                              }
   64   3                              case TEST_SERVO: 
   65   3                              {
   66   4                                      GO_Function();
   67   4                                      Serve_Test();
   68   4                                      break;
   69   4                              }
   70   3                              case ADC_Show:
   71   3                              {
   72   4                                      GO_Function();
   73   4                                      break;
   74   4                              }
   75   3                              case Seta_Servo:
   76   3                              {
   77   4                                      GO_Function();
   78   4                                      Set_Sevo();
   79   4                                      break;
   80   4                              }
   81   3                      }
   82   2                      if(Protect_flag)
   83   2                      {
   84   3                              Protect_flag=0;
   85   3                              CAR_Mode=STOP;
   86   3                              Turn_mode_Init();
   87   3                      }
   88   2      
   89   2                      
   90   2         }
   91   1      }
   92          
   93          
   94          void pit_handler1(void)
   95          {
   96   1              T++;
   97   1              ADC_SampleAndFilter();//ADC采样
   98   1              Last_dajiao=dajiao;
   99   1              dajiao=Servo_turn_pid(unification());//转向值计算
  100   1              speed_control_ring();//读取编码器
  101   1              if_Cycle();//环岛检测
  102   1              if(Servo_Flag)//舵机控制
  103   1              {
  104   2                      Servo_Control();
  105   2      
  106   2              }
  107   1              if(GO_PID_Control+GO_PID_Control1+GO_PID_Control2+GO_PID_Control3==1)
  108   1              {
  109   2                      Speed_diff((float)(dajiao)/100,0.15);
  110   2                      if(Intial>5)
  111   2                      {
  112   3                              imu963ra_get_gyro();
  113   3                              delta_angle=imu963ra_gyro_transition(imu963ra_gyro_y)/200+0.000077;
  114   3                              angle+=delta_angle;
  115   3                              Inertial_Navigation(IN_Val);//
  116   3                              Speed_Control();
  117   3                      }
  118   2                      
  119   2      //              if(Intial<5 &&Intial>-5)
  120   2      //              {
  121   2      ////                    printf("%f\n",angle);
  122   2      ////                    printf("%ld\n",encoder);
  123   2      //              }
C251 COMPILER V5.60.0,  main                                                               01/11/25  17:49:50  PAGE 3   

  124   2      
  125   2                      else if(Intial<-5)
  126   2                      {
  127   3                              imu963ra_get_gyro();
  128   3                              delta_angle=imu963ra_gyro_transition(imu963ra_gyro_y)/200+0.000077;
  129   3                              angle+=delta_angle;
  130   3                              Half_State_of_road(IN_Val);
  131   3                      }
  132   2                      else if(Speed_Mode>5)
  133   2                      {
  134   3                              State_of_road();
  135   3                      }
  136   2                      else
  137   2                      {
  138   3                              Speed_Control();
  139   3                      }
  140   2              }
  141   1              if(T>=4)
  142   1              {
  143   2                      T=0;
  144   2                      Protect();
  145   2                      if(Key_Flag)//按键检测
  146   2                      {
  147   3                              Key_scaner();
  148   3                      }
  149   2                      if(ADC_Show_Flag)//ADC显示
  150   2                      {
  151   3                              Show_pararm();
  152   3                      }
  153   2              }
  154   1      }


Module Information          Static   Overlayable
------------------------------------------------
  code size            =       673     ------
  ecode size           =    ------     ------
  data size            =    ------     ------
  idata size           =    ------     ------
  pdata size           =    ------     ------
  xdata size           =        17     ------
  xdata-const size     =    ------     ------
  edata size           =    ------     ------
  bit size             =    ------     ------
  ebit size            =    ------     ------
  bitaddressable size  =    ------     ------
  ebitaddressable size =    ------     ------
  far data size        =    ------     ------
  huge data size       =    ------     ------
  const size           =    ------     ------
  hconst size          =        54     ------
End of Module Information.


C251 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
