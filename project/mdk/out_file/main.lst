C251 COMPILER V5.60.0,  main                                                               12/10/25  14:42:46  PAGE 1   


C251 COMPILER V5.60.0, COMPILATION OF MODULE main
OBJECT MODULE PLACED IN .\out_file\main.obj
COMPILER INVOKED BY: D:\keil\C251\BIN\C251.EXE ..\user\main.c LARGE NOALIAS FLOAT64 WARNINGLEVEL(3) OPTIMIZE(3,SIZE) BRO
                    -WSE INCDIR(..\..\libraries\zf_common;..\..\libraries\zf_components;..\..\libraries\zf_device;..\..\libraries\zf_driver;.
                    -.\user;..\code) DEBUG PRINT(.\out_file\main.lst) OBJECT(.\out_file\main.obj) 

stmt  level    source

    1          #include "zf_common_headfile.h"
    2          int T=0;
    3          
    4          int T4=0;
    5          unsigned char speed_update_flag=0;
    6          void pit_handler1 (void);
    7          void pit_handler2 (void);
    8          void main()
    9          {
   10   1              clock_init(SYSTEM_CLOCK_40M);                           // 务必保留
   11   1              debug_init();                                                           // 务必保留
   12   1              /****************************************************/
   13   1              init_all();
   14   1              tim1_irq_handler = pit_handler1;// 设置定时器0中断回调函数
   15   1              tim2_irq_handler = pit_handler2;// 设置定时器1中断回调函数
   16   1          while(1)
   17   1              {
   18   2                      switch(CAR_Mode)
   19   2                      {
   20   3                              case STOP:
   21   3                              {
   22   4                                      if(Init_Flag==1)
   23   4                                      {
   24   5                                              Turn_mode_Init();
   25   5                                              Init_Flag=0;
   26   5                                      }
   27   4                                      if(Key)
   28   4                                      {
   29   5                                              EA=0;
   30   5                                              menu_handle_key(Key);
   31   5                                              Key=0;
   32   5                                              EA=1;
   33   5                                      }
   34   4                                      break;
   35   4                              }
   36   3                              case GO:
   37   3                              {
   38   4                                      GO_Function();
   39   4                                      break;
   40   4                              }
   41   3                              case GO_Pararm1: 
   42   3                              {
   43   4                                      GO_Function();
   44   4                                      break;
   45   4                              }
   46   3                              case GO_Pararm2: 
   47   3                              {
   48   4                                      GO_Function();
   49   4                                      break;
   50   4                              }
   51   3                              case GO_Pararm3: 
   52   3                              {
   53   4                                      GO_Function();
   54   4                                      break;
   55   4                              }
   56   3                              case TEST_PWM: 
   57   3                              {
C251 COMPILER V5.60.0,  main                                                               12/10/25  14:42:46  PAGE 2   

   58   4                                      GO_Function();
   59   4                                      PWM_Test();
   60   4                                      break;
   61   4                              }
   62   3                              case TEST_SERVO: 
   63   3                              {
   64   4                                      GO_Function();
   65   4                                      Serve_Test();
   66   4                                      break;
   67   4                              }
   68   3                              case ADC_Show:
   69   3                              {
   70   4                                      GO_Function();
   71   4                                      break;
   72   4                              }
   73   3                              case Seta_Servo:
   74   3                              {
   75   4                                      if(Init_Flag==1)
   76   4                                      {
   77   5                                              Turn_mode_Init();
   78   5                                              Init_Flag=0;
   79   5                                      }
   80   4                                      else
   81   4                                      {
   82   5                                              Set_Sevo();
   83   5                                      }
   84   4                                      break;
   85   4                              }
   86   3                              
   87   3                      }
   88   2                      if(Protect_flag)
   89   2                      {
   90   3                              Protect_flag=0;
   91   3                              CAR_Mode=STOP;
   92   3                              Turn_mode_Init();
   93   3                      }
   94   2                      
   95   2         }
   96   1      }
   97          
   98          
   99          void pit_handler1(void)
  100          {
  101   1              Protect();
  102   1              if(Servo_Flag)
  103   1              {
  104   2                      if(Enter_Flag_Left)
  105   2                      {
  106   3                              if(Mode_Flag<-2)//左圆环
  107   3                              {
  108   4                                      pwm_set_duty(Servo_Pwm,Servo_Mide+turn_Value);
  109   4                              }
  110   3                              else if(Mode_Flag>2)//右圆环
  111   3                              {
  112   4                                      pwm_set_duty(Servo_Pwm,Servo_Mide-turn_Value);
  113   4                              }
  114   3                              else
  115   3                              {
  116   4                                      pwm_set_duty(Servo_Pwm,Help_turn2(Servo_Mide+dajiao,Help_Value2,ADC_Falg));
  117   4                              }
  118   3                      }
  119   2                      else
  120   2                      {
  121   3                              pwm_set_duty(Servo_Pwm,Help_turn2(Servo_Mide+dajiao,Help_Value2,ADC_Falg));
  122   3                      }
  123   2                      
C251 COMPILER V5.60.0,  main                                                               12/10/25  14:42:46  PAGE 3   

  124   2              }
  125   1              
  126   1              if(Key_Flag)
  127   1              {
  128   2                      Key_scaner();
  129   2              }
  130   1      
  131   1              if(ADC_Show_Flag)
  132   1              {
  133   2                      if(++T>=10)
  134   2                      {
  135   3                              Buzzer_OFF();
  136   3                              T=0;
  137   3                              Show_pararm();
  138   3                      }
  139   2              }
  140   1              speed_control_ring();
  141   1      //      Speed_Control();
  142   1              if(GO_PID_Control+GO_PID_Control1+GO_PID_Control2+GO_PID_Control3==1)
  143   1              {
  144   2                      State_of_road();
  145   2              }
  146   1      
  147   1      }
  148          
  149          void pit_handler2(void)
  150          {
  151   1              ADC_SampleAndFilter();
  152   1              dajiao=Servo_turn_pid(unification());
  153   1      //      if_Cycle();
  154   1              
  155   1      }


Module Information          Static   Overlayable
------------------------------------------------
  code size            =       571     ------
  ecode size           =    ------     ------
  data size            =    ------     ------
  idata size           =    ------     ------
  pdata size           =    ------     ------
  xdata size           =         5     ------
  xdata-const size     =    ------     ------
  edata size           =    ------     ------
  bit size             =    ------     ------
  ebit size            =    ------     ------
  bitaddressable size  =    ------     ------
  ebitaddressable size =    ------     ------
  far data size        =    ------     ------
  huge data size       =    ------     ------
  const size           =    ------     ------
  hconst size          =        22     ------
End of Module Information.


C251 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
