C251 COMPILER V5.60.0,  main                                                               05/10/25  16:56:47  PAGE 1   


C251 COMPILER V5.60.0, COMPILATION OF MODULE main
OBJECT MODULE PLACED IN .\out_file\main.obj
COMPILER INVOKED BY: D:\keil\C251\BIN\C251.EXE ..\user\main.c LARGE NOALIAS FLOAT64 WARNINGLEVEL(3) OPTIMIZE(3,SIZE) BRO
                    -WSE INCDIR(..\..\libraries\zf_common;..\..\libraries\zf_components;..\..\libraries\zf_device;..\..\libraries\zf_driver;.
                    -.\user;..\code) DEBUG PRINT(.\out_file\main.lst) OBJECT(.\out_file\main.obj) 

stmt  level    source

    1          #include "zf_common_headfile.h"
    2          int T=0;
    3          
    4          int T4=0;
    5          int Init_Time=0;
    6          unsigned char PIT0_Flag=0;
    7          unsigned char PIT1_Flag=0;
    8          
    9          void pit_handler0 (void);
   10          void pit_handler1 (void);
   11          void main()
   12          {
   13   1              clock_init(SYSTEM_CLOCK_40M);                           // 务必保留
   14   1              debug_init();                                                           // 务必保留
   15   1              /****************************************************/
   16   1              init_all();
   17   1              tim0_irq_handler = pit_handler0;// 设置定时器0中断回调函数
   18   1              tim1_irq_handler = pit_handler1;// 设置定时器1中断回调函数
   19   1          while(1)
   20   1              {
   21   2                      switch(CAR_Mode)
   22   2                      {
   23   3                              case STOP:
   24   3                              {
   25   4                                      if(Init_Flag==1)
   26   4                                      {
   27   5                                              Turn_mode_Init();
   28   5                                              Init_Flag=0;
   29   5                                      }
   30   4                                      if(Key)
   31   4                                      {
   32   5                                              EA=0;
   33   5                                              menu_handle_key(Key);
   34   5                                              Key=0;
   35   5                                              EA=1;
   36   5                                      }
   37   4                                      break;
   38   4                              }
   39   3                              case GO:
   40   3                              {
   41   4                                      GO_Function();
   42   4                                      break;
   43   4                              }
   44   3                              case GO_Pararm1: 
   45   3                              {
   46   4                                      GO_Function();
   47   4                                      break;
   48   4                              }
   49   3                              case GO_Pararm2: 
   50   3                              {
   51   4                                      GO_Function();
   52   4                                      break;
   53   4                              }
   54   3                              case GO_Pararm3: 
   55   3                              {
   56   4                                      GO_Function();
   57   4                                      break;
C251 COMPILER V5.60.0,  main                                                               05/10/25  16:56:47  PAGE 2   

   58   4                              }
   59   3                              case TEST_PWM: 
   60   3                              {
   61   4                                      if(Init_Flag==1)
   62   4                                      {
   63   5                                              EA=0;
   64   5                                              Turn_mode_Init();
   65   5                                              Init_Flag=0;
   66   5                                              EA=1;
   67   5                                      }
   68   4                                      PWM_Test();
   69   4                                      break;
   70   4                              }
   71   3                              case TEST_SERVO: 
   72   3                              {
   73   4                                      if(Init_Flag==1)
   74   4                                      {
   75   5                                              EA=0;
   76   5                                              Turn_mode_Init();
   77   5                                              Init_Flag=0;
   78   5                                              EA=1;
   79   5                                      }
   80   4                                      Serve_Test();
   81   4                                      break;
   82   4                              }
   83   3                              case ADC_Show:
   84   3                              {
   85   4                                      if(Init_Flag==1)
   86   4                                      {
   87   5                                              Turn_mode_Init();
   88   5                                              Init_Flag=0;
   89   5                                      }
   90   4                                      break;
   91   4                              }
   92   3                              case Seta_Servo:
   93   3                              {
   94   4                                      if(Init_Flag==1)
   95   4                                      {
   96   5                                              Turn_mode_Init();
   97   5                                              Init_Flag=0;
   98   5                                      }
   99   4                                      else
  100   4                                      {
  101   5                                              Set_Sevo();
  102   5                                      }
  103   4                                      break;
  104   4                              }
  105   3                      }
  106   2         }
  107   1      }
  108          void pit_handler0(void)
  109          {
  110   1              Protect();
  111   1              if(Servo_Flag)
  112   1              {
  113   2                      if(Enter_Flag_Left)
  114   2                      {
  115   3                              if(Mode_Flag<-2)//左圆环
  116   3                              {
  117   4                                      pwm_set_duty(Servo_Pwm,Servo_Mide+turn_Value);
  118   4                              }
  119   3                              else if(Mode_Flag>2)//右圆环
  120   3                              {
  121   4                                      pwm_set_duty(Servo_Pwm,Servo_Mide-turn_Value);
  122   4                              }
  123   3                              else
C251 COMPILER V5.60.0,  main                                                               05/10/25  16:56:47  PAGE 3   

  124   3                              {
  125   4                                      pwm_set_duty(Servo_Pwm,Servo_Mide+dajiao);
  126   4                              }
  127   3                      }
  128   2                      else
  129   2                      {
  130   3                              pwm_set_duty(Servo_Pwm,Servo_Mide+dajiao);
  131   3                      }
  132   2                      
  133   2              }
  134   1              if(ADC_Show_Flag)
  135   1              {
  136   2                      if(++T>=10)
  137   2                      {
  138   3                              Buzzer_OFF();
  139   3                              T=0;
  140   3                              Show_pararm();
  141   3                      }
  142   2              }
  143   1              if(Key_Flag)
  144   1              {
  145   2                      Key_scaner();
  146   2              }
  147   1      
  148   1      }
  149          
  150          void pit_handler1(void)
  151          {
  152   1              ADC_SampleAndFilter();
  153   1              dajiao=Servo_turn_pid(unification());
  154   1              if_Cycle();
  155   1              if(CAR_Mode!=STOP)
  156   1              {
  157   2                      
  158   2                      State_of_road();
  159   2              }
  160   1      }


Module Information          Static   Overlayable
------------------------------------------------
  code size            =       479     ------
  ecode size           =    ------     ------
  data size            =    ------     ------
  idata size           =    ------     ------
  pdata size           =    ------     ------
  xdata size           =         8     ------
  xdata-const size     =    ------     ------
  edata size           =    ------     ------
  bit size             =    ------     ------
  ebit size            =    ------     ------
  bitaddressable size  =    ------     ------
  ebitaddressable size =    ------     ------
  far data size        =    ------     ------
  huge data size       =    ------     ------
  const size           =    ------     ------
  hconst size          =        35     ------
End of Module Information.


C251 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
