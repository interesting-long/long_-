C251 COMPILER V5.60.0,  oled                                                               23/10/25  21:28:05  PAGE 1   


C251 COMPILER V5.60.0, COMPILATION OF MODULE oled
OBJECT MODULE PLACED IN .\out_file\oled.obj
COMPILER INVOKED BY: D:\keil\C251\BIN\C251.EXE ..\code\oled.c LARGE NOALIAS FLOAT64 WARNINGLEVEL(3) OPTIMIZE(3,SIZE) BRO
                    -WSE INCDIR(..\..\libraries\zf_common;..\..\libraries\zf_components;..\..\libraries\zf_device;..\..\libraries\zf_driver;.
                    -.\user;..\code) DEBUG PRINT(.\out_file\oled.lst) OBJECT(.\out_file\oled.obj) 

stmt  level    source

    1          #include "oled.h"
    2          #include "oledfont.h"    
    3          //OLED的显存
    4          //存放格式如下.
    5          //[0]0 1 2 3 ... 127    
    6          //[1]0 1 2 3 ... 127    
    7          //[2]0 1 2 3 ... 127    
    8          //[3]0 1 2 3 ... 127    
    9          //[4]0 1 2 3 ... 127    
   10          //[5]0 1 2 3 ... 127    
   11          //[6]0 1 2 3 ... 127    
   12          //[7]0 1 2 3 ... 127                       
   13          void delay_ms(unsigned int ms)
   14          {                         
   15   1              unsigned int a;
   16   1              while(ms)
   17   1              {
   18   2                      a=1800;
   19   2                      while(a--);
   20   2                      ms--;
   21   2              }
   22   1              return;
   23   1      }
   24          
   25          //反显函数
   26          void OLED_ColorTurn(u8 i)
   27          {
   28   1              if(i==0)
   29   1                      {
   30   2                              OLED_WR_Byte(0xA6,OLED_CMD);//正常显示
   31   2                      }
   32   1              if(i==1)
   33   1                      {
   34   2                              OLED_WR_Byte(0xA7,OLED_CMD);//反色显示
   35   2                      }
   36   1      }
   37          
   38          //屏幕旋转180度
   39          void OLED_DisplayTurn(u8 i)
   40          {
   41   1              if(i==0)
   42   1                      {
   43   2                              OLED_WR_Byte(0xC8,OLED_CMD);//正常显示
   44   2                              OLED_WR_Byte(0xA1,OLED_CMD);
   45   2                      }
   46   1              if(i==1)
   47   1                      {
   48   2                              OLED_WR_Byte(0xC0,OLED_CMD);//反转显示
   49   2                              OLED_WR_Byte(0xA0,OLED_CMD);
   50   2                      }
   51   1      }
   52          
   53          
   54          void OLED_WR_Byte(u8 dat,u8 cmd)
   55          {       
   56   1              u8 i;                     
   57   1              if(cmd)
C251 COMPILER V5.60.0,  oled                                                               23/10/25  21:28:05  PAGE 2   

   58   1                OLED_DC_Set();
   59   1              else 
   60   1                OLED_DC_Clr();                  
   61   1              OLED_CS_Clr();
   62   1              for(i=0;i<8;i++)
   63   1              {                         
   64   2                      OLED_SCL_Clr();
   65   2                      if(dat&0x80)
   66   2                      {
   67   3                       OLED_SDA_Set();
   68   3                      }
   69   2                      else
   70   2                      {
   71   3                       OLED_SDA_Clr();
   72   3                      }
   73   2                OLED_SCL_Set();
   74   2                      dat<<=1;   
   75   2              }                                                 
   76   1              OLED_CS_Set();
   77   1              OLED_DC_Set();            
   78   1      } 
   79          
   80          //坐标设置
   81          
   82          void OLED_Set_Pos(u8 x, u8 y) 
   83          { 
   84   1              OLED_WR_Byte(0xb0+y,OLED_CMD);
*** WARNING C188 IN LINE 84 OF ..\code\oled.c: 'parameter 1': value truncated
   85   1              OLED_WR_Byte(((x&0xf0)>>4)|0x10,OLED_CMD);
   86   1              OLED_WR_Byte((x&0x0f),OLED_CMD);
   87   1      }         
   88          //开启OLED显示    
   89          /*void OLED_Display_On(void)
   90          {
   91                  OLED_WR_Byte(0X8D,OLED_CMD);  //SET DCDC命令
   92                  OLED_WR_Byte(0X14,OLED_CMD);  //DCDC ON
   93                  OLED_WR_Byte(0XAF,OLED_CMD);  //DISPLAY ON
   94          }
   95          //关闭OLED显示     
   96          void OLED_Display_Off(void)
   97          {
   98                  OLED_WR_Byte(0X8D,OLED_CMD);  //SET DCDC命令
   99                  OLED_WR_Byte(0X10,OLED_CMD);  //DCDC OFF
  100                  OLED_WR_Byte(0XAE,OLED_CMD);  //DISPLAY OFF
  101          }                                        
  102          //清屏函数,清完屏,整个屏幕是黑色的!和没点亮一样!!!
  103          *///////          
  104          void OLED_Clear(void)  
  105          {  
  106   1              u8 i,n;             
  107   1              for(i=0;i<8;i++)  
  108   1              {  
  109   2                      OLED_WR_Byte (0xb0+i,OLED_CMD);    //设置页地址（0~7）
*** WARNING C188 IN LINE 109 OF ..\code\oled.c: 'parameter 1': value truncated
  110   2                      OLED_WR_Byte (0x00,OLED_CMD);      //设置显示位置―列低地址
  111   2                      OLED_WR_Byte (0x10,OLED_CMD);      //设置显示位置―列高地址   
  112   2                      for(n=0;n<128;n++)OLED_WR_Byte(0,OLED_DATA); 
  113   2              } //更新显示
  114   1      }
  115          
  116          //在指定位置显示一个字符,包括部分字符
  117          //x:0~127
  118          //y:0~63                                 
  119          //sizey:选择字体 6x8  8x16
  120          void OLED_ShowChar(u8 x,u8 y,u8 chr,u8 sizey,unsigned char facial)
  121          {       
C251 COMPILER V5.60.0,  oled                                                               23/10/25  21:28:05  PAGE 3   

  122   1              u8 c=0,sizex=sizey/2;
  123   1              u16 i=0,size1;
  124   1              if(sizey==8)size1=6;
  125   1              else size1=(sizey/8+((sizey%8)?1:0))*(sizey/2);
  126   1              c=chr-' ';//得到偏移后的值
  127   1              OLED_Set_Pos(x,y);
  128   1              if(!facial)
  129   1              {
  130   2               for(i=0;i<size1;i++)
  131   2                  {
  132   3                      if(i%sizex==0&&sizey!=8) OLED_Set_Pos(x,y++);
  133   3                      if(sizey==8) OLED_WR_Byte((asc2_0806[c][i]),OLED_DATA);//6X8字号
  134   3                      else if(sizey==16) OLED_WR_Byte(asc2_1608[c][i],OLED_DATA);//8x16字号
  135   3                      else return;
  136   3                 }
  137   2            }
  138   1            else if(facial){
  139   2               for(i=0;i<size1;i++)
  140   2                  {
  141   3                      if(i%sizex==0&&sizey!=8) OLED_Set_Pos(x,y++);
  142   3                      if(sizey==8) OLED_WR_Byte((~asc2_0806[c][i]),OLED_DATA);//6X8字号
  143   3                      else if(sizey==16) OLED_WR_Byte((~asc2_1608[c][i]),OLED_DATA);//8x16字号
  144   3                      else return;
  145   3                 }
  146   2            }
  147   1           else return;
  148   1      }
  149          //m^n函数
  150          u32 oled_pow(u8 m,u8 n)
  151          {
  152   1              u32 result=1;    
  153   1              while(n--)result*=m;    
  154   1              return result;
  155   1      }                               
  156          //m^n函数
  157          //显示数字
  158          //x,y :起点坐标
  159          //num:要显示的数字
  160          //len :数字的位数
  161          //sizey:字体大小                  
  162          void OLED_ShowNum(u8 x,u8 y,u32 num,u8 len,u8 sizey,unsigned char facial)
  163          {               
  164   1              u8 t,temp,m=0;
  165   1              u8 enshow=0;
  166   1                  if(sizey==8)m=2;
  167   1         if(!facial){
  168   2              for(t=0;t<len;t++)
  169   2              {
  170   3                      temp=(num/oled_pow(10,len-t-1))%10;
*** WARNING C188 IN LINE 170 OF ..\code\oled.c: 'parameter 2': value truncated
  171   3                      if(enshow==0&&t<(len-1))
  172   3                      {
  173   4                              if(temp==0)
  174   4                              {
  175   5                                      OLED_ShowChar(x+(sizey/2+m)*t,y,' ',sizey,0);
*** WARNING C188 IN LINE 175 OF ..\code\oled.c: 'parameter 1': value truncated
  176   5                                      continue;
  177   5                              }else enshow=1;
  178   4                      }
  179   3                      OLED_ShowChar(x+(sizey/2+m)*t,y,temp+'0',sizey,0);
*** WARNING C188 IN LINE 179 OF ..\code\oled.c: 'parameter 1': value truncated
*** WARNING C188 IN LINE 179 OF ..\code\oled.c: 'parameter 3': value truncated
  180   3              }
  181   2      }
  182   1           else if(facial){
  183   2               for(t=0;t<len;t++)
C251 COMPILER V5.60.0,  oled                                                               23/10/25  21:28:05  PAGE 4   

  184   2              {
  185   3                      temp=(num/oled_pow(10,len-t-1))%10;
*** WARNING C188 IN LINE 185 OF ..\code\oled.c: 'parameter 2': value truncated
  186   3                      if(enshow==0&&t<(len-1))
  187   3                      {
  188   4                              if(temp==0)
  189   4                              {
  190   5                                      OLED_ShowChar(x+(sizey/2+m)*t,y,' ',sizey,1);
*** WARNING C188 IN LINE 190 OF ..\code\oled.c: 'parameter 1': value truncated
  191   5                                      continue;
  192   5                              }else enshow=1;
  193   4                      }
  194   3                      OLED_ShowChar(x+(sizey/2+m)*t,y,temp+'0',sizey,1);
*** WARNING C188 IN LINE 194 OF ..\code\oled.c: 'parameter 1': value truncated
*** WARNING C188 IN LINE 194 OF ..\code\oled.c: 'parameter 3': value truncated
  195   3              }
  196   2      }
  197   1      }
  198          //显示一个字符号串
  199          void OLED_ShowString(u8 x,u8 y,u8 *chr,u8 sizey,unsigned char facial)
  200          {
  201   1              u8 j=0;
  202   1       if(!facial){
  203   2              while (chr[j]!='\0')
  204   2              {               
  205   3                      OLED_ShowChar(x,y,chr[j++],sizey,0);
  206   3                      if(sizey==8)x+=6;
  207   3                      else x+=sizey/2;
  208   3              }
  209   2      }
  210   1      else if(facial){
  211   2              while (chr[j]!='\0')
  212   2              {               
  213   3                      OLED_ShowChar(x,y,chr[j++],sizey,1);
  214   3                      if(sizey==8)x+=6;
  215   3                      else x+=sizey/2;
  216   3              }
  217   2      }
  218   1      }
  219          //显示汉字
  220          void OLED_ShowChinese(u8 x,u8 y,u8 no,u8 sizey,unsigned char facial)
  221          {
  222   1              u16 i,size1=(sizey/8+((sizey%8)?1:0))*sizey;
  223   1        if(!facial){
  224   2              for(i=0;i<size1;i++)
  225   2              {
  226   3                      if(i%sizey==0) OLED_Set_Pos(x,y++);
  227   3                      if(sizey==16) OLED_WR_Byte(Hzk[no][i],OLED_DATA);//16x16字号
  228   3                      else return;
  229   3              }
  230   2        } 
  231   1       else if(facial){
  232   2              for(i=0;i<size1;i++)
  233   2              {
  234   3                      if(i%sizey==0) OLED_Set_Pos(x,y++);
  235   3                      if(sizey==16) OLED_WR_Byte(~Hzk[no][i],OLED_DATA);//16x16字号
  236   3                      else return;
  237   3              }
  238   2        }                                                             
  239   1      }
  240          
  241          
  242          //初始化                                    
  243          void OLED_Init(void)
  244          {
  245   1              OLED_RES_Clr();
C251 COMPILER V5.60.0,  oled                                                               23/10/25  21:28:05  PAGE 5   

  246   1        delay_ms(200);
  247   1              OLED_RES_Set();
  248   1              OLED_WR_Byte(0xAE,OLED_CMD);//--turn off oled panel
  249   1              OLED_WR_Byte(0x00,OLED_CMD);//---set low column address
  250   1              OLED_WR_Byte(0x10,OLED_CMD);//---set high column address
  251   1              OLED_WR_Byte(0x40,OLED_CMD);//--set start line address  Set Mapping RAM Display Start Line (0x00~0x3F)
  252   1              OLED_WR_Byte(0x81,OLED_CMD);//--set contrast control register
  253   1              OLED_WR_Byte(0xCF,OLED_CMD); // Set SEG Output Current Brightness
  254   1              OLED_WR_Byte(0xA1,OLED_CMD);//--Set SEG/Column Mapping     0xa0左右反置 0xa1正常
  255   1              OLED_WR_Byte(0xC8,OLED_CMD);//Set COM/Row Scan Direction   0xc0上下反置 0xc8正常
  256   1              OLED_WR_Byte(0xA6,OLED_CMD);//--set normal display
  257   1              OLED_WR_Byte(0xA8,OLED_CMD);//--set multiplex ratio(1 to 64)
  258   1              OLED_WR_Byte(0x3f,OLED_CMD);//--1/64 duty
  259   1              OLED_WR_Byte(0xD3,OLED_CMD);//-set display offset       Shift Mapping RAM Counter (0x00~0x3F)
  260   1              OLED_WR_Byte(0x00,OLED_CMD);//-not offset
  261   1              OLED_WR_Byte(0xd5,OLED_CMD);//--set display clock divide ratio/oscillator frequency
  262   1              OLED_WR_Byte(0x80,OLED_CMD);//--set divide ratio, Set Clock as 100 Frames/Sec
  263   1              OLED_WR_Byte(0xD9,OLED_CMD);//--set pre-charge period
  264   1              OLED_WR_Byte(0xF1,OLED_CMD);//Set Pre-Charge as 15 Clocks & Discharge as 1 Clock
  265   1              OLED_WR_Byte(0xDA,OLED_CMD);//--set com pins hardware configuration
  266   1              OLED_WR_Byte(0x12,OLED_CMD);
  267   1              OLED_WR_Byte(0xDB,OLED_CMD);//--set vcomh
  268   1              OLED_WR_Byte(0x40,OLED_CMD);//Set VCOM Deselect Level
  269   1              OLED_WR_Byte(0x20,OLED_CMD);//-Set Page Addressing Mode (0x00/0x01/0x02)
  270   1              OLED_WR_Byte(0x02,OLED_CMD);//
  271   1              OLED_WR_Byte(0x8D,OLED_CMD);//--set Charge Pump enable/disable
  272   1              OLED_WR_Byte(0x14,OLED_CMD);//--set(0x10) disable
  273   1              OLED_WR_Byte(0xA4,OLED_CMD);// Disable Entire Display On (0xa4/0xa5)
  274   1              OLED_WR_Byte(0xA6,OLED_CMD);// Disable Inverse Display On (0xa6/a7) 
  275   1              OLED_Clear();
  276   1              OLED_WR_Byte(0xAF,OLED_CMD); /*display ON*/ 
  277   1      }
  278          
  279          
  280          
  281          


Module Information          Static   Overlayable
------------------------------------------------
  code size            =      5257     ------
  ecode size           =    ------     ------
  data size            =    ------     ------
  idata size           =    ------     ------
  pdata size           =    ------     ------
  xdata size           =    ------         23
  xdata-const size     =    ------     ------
  edata size           =    ------     ------
  bit size             =    ------     ------
  ebit size            =    ------     ------
  bitaddressable size  =    ------     ------
  ebitaddressable size =    ------     ------
  far data size        =    ------     ------
  huge data size       =    ------     ------
  const size           =    ------     ------
  hconst size          =    ------     ------
End of Module Information.


C251 COMPILATION COMPLETE.  10 WARNING(S),  0 ERROR(S)
